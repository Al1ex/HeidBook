<HTML><HEAD><TITLE>网络7层管理和过滤的领导者</TITLE>
<META content="text/html; charset=utf-8" http-equiv=Content-Type>
<LINK rel=stylesheet type=text/css href="/ext/resources/css/ext-all.css">
<link href="/ext-ux/css/ux-all.css" rel="stylesheet" type="text/css" />
<LINK rel=stylesheet type=text/css href="/ext/resources/css/xtheme-default.css">
<link href="/Content/IconCls.css" rel="stylesheet" type="text/css" />
<SCRIPT type=text/javascript src="/ext/adapter/ext/ext-base.js"></SCRIPT>
<SCRIPT type=text/javascript  src="/ext/ext-all.js"></SCRIPT>
<script type=text/javascript  src="/msa/publicjs/exportexcel.js"></script>
<SCRIPT type=text/javascript  src="/msa/publicjs/pubstyle.js"></SCRIPT>
<STYLE type=text/css>
HTML {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 12px verdana; HEIGHT: 100%; OVERFLOW: hidden; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px}
BODY {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 12px verdana; HEIGHT: 100%; OVERFLOW: hidden; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px
}
P {
	MARGIN: 5px
}
</STYLE>

<SCRIPT type=text/javascript>
    Ext.BLANK_IMAGE_URL = '/msa/extjs/resources/images/default/s.gif';
    var pagesize;
    var intervaltime;
		pagesize=100;
    intervaltime=20;
    Ext.onReady(function(){
	
	  		Ext.QuickTips.init();

				var detailEl;
				
				
				var myMask = new Ext.LoadMask(Ext.getBody(), 
				{
				        	msg:"Please wait..."
				});
				myMask.show();
						
    var runner = new Ext.util.TaskRunner();

    // create the data store

    var xtzystore = new Ext.data.JsonStore({
        root: 'Results',
        totalProperty: 'totalCount',
        url:'/msa/main.xp',
        baseParams:{Fun:'msaNowSrvList'},
        fields: [
           {name: 'srvid'},
           {name: 'srvname'},
           {name: 'srvflowu', type: 'int'},
           {name: 'flowbps'},
           {name: 'flowp',type: 'float' },
           {name: 'hourtime'},
           {name: 'hourflowu', type: 'int'},
           {name: 'hourflow'},
           {name: 'daytime'},
           {name: 'dayflowu', type: 'int'},
           {name: 'dayflow'}
        ]
    });
 
    xtzystore.sort('flowp', 'DESC');
    xtzystore.load();
    // create the Grid
    
    HlPagingToolbar = Ext.extend(Ext.PagingToolbar, { 
    emptyMsg: "当前无访问", 
    initComponent : function(){ 
    	   var pageSizeItems = [ 
                     '-','每', 
                     this.inputItem = new Ext.form.NumberField({ 
									    cls: 'x-tbar-page-number', 
									    allowDecimals: false, 
									    allowNegative: false, 
									    enableKeyEvents: true, 
									    maxValue: 300, 
									    maxText: '不允许超过300秒', 
									    selectOnFocus: true, 
									    value: intervaltime, 
									    submitValue: false, 
									    listeners: { 
									        scope: this, 
									        keydown: this.onHlTimeKeyDown, 
									        blur: this.onHlTimeBlur 
									    } 
                     }),'秒刷新','-', 
                     {
						            //pressed: true,
						            icon: '/msa/images/grid.png',
						            enableToggle:true,
						            text: '导出数据到Excel',
						            cls: 'x-btn-text-icon details',
						            toggleHandler: function(btn, pressed){
						                downloadViewDataActive(xtzygrid);
						            }
						        },'-']; 
		         var userItems = this.items || []; 
		         this.items = userItems.concat(pageSizeItems); 
		         HlPagingToolbar.superclass.initComponent.call(this); 
		    }, 
		    onHlPagingKeyDown: function(field, e){ 
		        if(field.isValid()){ 
		            var k = e.getKey(); 
		             if (k == e.RETURN) { 
		                    e.stopEvent(); 
		                    this.pageSize = field.getValue(); 
		                    pagesize=this.pageSize;
		                    //alert(this.pageSize);
		                    this.doRefresh(); 
		             } 
		        } 
		    }, 
		    onHlPagingBlur: function(field){ 
		        if(field.isValid()){ 
		            this.pageSize = field.getValue(); 
		            //alert(this.pageSize);
		            pagesize=this.pageSize;
		            this.doRefresh(); 
		        } 
		    },
		    onHlTimeKeyDown: function(field, e){ 
		        if(field.isValid()){ 
		            var k = e.getKey(); 
		             if (k == e.RETURN) { 
		                    e.stopEvent(); 
		                    intervaltime = field.getValue(); 
		                    runner.stopAll();
												var task = {
														run: function(){
															 xtzystore.load();
														},
														interval: intervaltime*1000 // 每30秒一周期
												};
												runner.start(task);
		             } 
		        } 
		    }, 
		    onHlTimeBlur: function(field){ 
		        if(field.isValid()){ 
		            intervaltime = field.getValue(); 
		            runner.stopAll();
                var task = {
														run: function(){
															 xtzystore.load();
														},
														interval: intervaltime*1000 // 每30秒一周期
								};
								runner.start(task);
		        } 
		    }  
		});
    
    var pagingBar= new HlPagingToolbar({
        store: xtzystore,
        pageSize: pagesize});
        
    function pctChange(val){
        if(val > 0){
            return val + '%';
        }else if(val < 0){
            return val + '%';
        }
        return val;
    }
    
     var tools = [{
            id: 'refresh',
//            on: {
//                click: function(){
//                    xtzystore.load();
//                },
//                scope:this
//            }
            handler: function(e, target, panel){
		            panel.getStore().load();
		        }
        },{
        id:'close',
        handler: function(e, target, panel){
        	  panel.hide();
            //panel.ownerCt.remove(panel, true);
        }
    }];
    
    var xtzygrid = new Ext.grid.GridPanel({
        store: xtzystore,
        tbar: pagingBar,
        columns: [
            {id:'srvname',header: "服务名称", width: 80, sortable: true, dataIndex: 'srvname'},
            {header: "速率bps", width: 100, sortable: true,   dataIndex: 'flowbps'},
            {header: "占比", width: 90, sortable: true,  renderer: pctChange,  dataIndex: 'flowp'},
            //{header: "本小时时长", width: 90, sortable: true,   dataIndex: 'hourtime'},
            {header: "本小时总流量", width: 110, sortable: true,   dataIndex: 'hourflow'},
            {header: "当天总时长", width: 110, sortable: true,   dataIndex: 'daytime'},
            {header: "当天总流量", width: 110, sortable: true,   dataIndex: 'dayflow'}
        ],
        stripeRows: true,
        autoExpandColumn: 'srvname',
        width:(screen.width-200)*0.7,
        height:screen.height-210,
		    collapsible:false,
		    draggable:false
    });
    
    var rightClick  = new Ext.menu.Menu({
                id:'feeds-ctx',
                items: [
                 {
                    id:'useripcon',
                    iconCls:'load-icon',
                    text:'察看使用该服务的用户',
                    scope: this,
                    handler:function(){

                        var record = xtzygrid.getStore().getAt(detailEl);
                        var srvid=record.get("srvid");
                        location.href= "/msa/main.xp?Fun=msaShowOnlineUser+srvid=" + srvid;

                    }
    }]});

//    xtzygrid.on('mouseover',function(e){//添加mouseover事件
//		  var index = xtzygrid.getView().findRowIndex(e.getTarget());//根据mouse所在的target可以取到列的位置	  
//		  if(index!==false){//当取到了正确的列时，（因为如果传入的target列没有取到的时候会返回false）
//					   var record = xtzygrid.getStore().getAt(index);//把这列的record取出来
//					   var srvid=record.get("srvid");
//             //location.href= "/msa/main.xp?Fun=msaShowOnlineUser+srvid=" + srvid;
//                        
//             Ext.Ajax.request({
//									method : 'POST', 
//							    url:'/msa/main.xp?Fun=msaShowOnlineUser+srvid='  + srvid , 
//							    success: function(response,options) 
//								  {
//								     //alert(response.responseText);
//								     var str = '<div style="width:200px;height:80px;font: normal 8px arial,helvetica,sans-serif;margin:0 !important;line-height:10px;padding:0;"><table width="100%"  border="0" cellspacing="0" cellpadding="0" ><tr><td height="50%" width="35%">上行流量</td><td height="50%" width="35%">'+record.get('v18')+'</td></tr><tr><td height="50%" width="35%">下行流量</td><td height="50%" width="35%">'+record.get('v19')+'</td></tr><tr><td height="50%" width="35%">数据包数目</td><td height="50%" width="35%">'+record.get('v20')+'</td></tr><tr><td height="50%" width="35%">一级服务</td><td height="50%" width="35%">'+record.get('v21')+'</td></tr><tr><td height="50%" width="35%">二级服务</td><td height="50%" width="35%">'+record.get('v22')+'</td></tr><tr><td height="50%" width="35%">虚拟通道</td><td height="50%" width="35%">'+record.get('v23')+'</td></tr></table></div>';	   
//							 			 var rowEl = Ext.get(e.getTarget());//把target转换成Ext.Element对象
//									   rowEl.set({
//									    'ext:qtip':str 
//									   },false);
//						      },
//							    failure : function() 
//							    {   
//								  	Ext.MessageBox.alert('提示','抓包失败');
//							    }
//						 });           
//					   
//			}
//	 });
    
    xtzygrid.addListener('rowclick', rightClickFn);
    function rightClickFn(client, rowIndex, e) {
                rightClick.showAt(e.getXY());
                detailEl=  rowIndex;
    }
    xtzygrid.addListener('rowcontextmenu', rightClickFn);
    function rightClickFn(client, rowIndex, e) {
                rightClick.showAt(e.getXY());
                detailEl=  rowIndex;
    }
    
     var toolsClose = [{
        id:'close',
        handler: function(e, target, panel){
        	  panel.hide();
            //panel.ownerCt.remove(panel, true);
        }
     }];

     var xtzyPanel1 = new Ext.Panel({
			        title: '当前服务流量速率示意图',
			        height:(screen.height-220)/3,
			        width:(screen.width-200)*0.25,
			        tools: toolsClose,
			        frame:true,
					    collapsible:false,
					    draggable:false,
					    items: {
			            store: xtzystore,
			            xtype: 'piechart',
			            dataField: 'srvflowu',
			            categoryField: 'srvname',
			            //extra styles get applied to the chart defaults
			            extraStyle:
			            {
			                legend:
			                {
			                    display: 'right',
			                    padding: 5,
			                    font:
			                    {
			                        family: 'Arial',
			                        size: 6
			                    }
			                }
			            }
			        }
		 });
    

		var xtzyPanel2 = new Ext.Panel({
			        title: '本小时各服务总流量分布示意图',
			        height:(screen.height-220)/3,
			        width:(screen.width-200)*0.25,
			        tools: toolsClose,
			        frame:true,
					    collapsible:false,
					    draggable:false,
					    items: {
			            store: xtzystore,
			            xtype: 'piechart',
			            dataField: 'hourflowu',
			            categoryField: 'srvname',
			            //extra styles get applied to the chart defaults
			            extraStyle:
			            {
			                legend:
			                {
			                    display: 'right',
			                    padding: 5,
			                    font:
			                    {
			                        family: 'Arial',
			                        size: 6
			                    }
			                }
			            }
			        }
			    });
		var xtzyPanel3 = new Ext.Panel({
			        title: '当天各服务总流量分布示意图',
			        height:(screen.height-220)/3,
			        width:(screen.width-200)*0.25,
			        tools: toolsClose,
			        frame:true,
					    collapsible:false,
					    draggable:false,
					    items: {
			            store: xtzystore,
			            xtype: 'piechart',
			            dataField: 'dayflowu',
			            categoryField: 'srvname',
			            //extra styles get applied to the chart defaults
			            extraStyle:
			            {
			                legend:
			                {
			                    display: 'right',
			                    padding: 5,
			                    font:
			                    {
			                        family: 'Arial',
			                        size: 6
			                    }
			                }
			            }
			        }
			    });
	
						// Finally, build the main layout once all the pieces are ready.  This is also a good
						// example of putting together a full-screen BorderLayout within a Viewport.
					  new Ext.Viewport({
									id:'tree-xtzy-panel',
								  layout:'table',
									layoutConfig: {
										columns: 2
									},
									defaults: {
										bodyStyle:'valign:top'
									},
								  items: [{
								        items:xtzygrid,
								        height:screen.height-210,
												rowspan: 3
								    },{
								        height:(screen.height-220)/3,
								        width:(screen.width-200)*0.25,
								        items:xtzyPanel1
								    },{
								    	height:(screen.height-220)/3,
								    	width:(screen.width-200)*0.25,
										  items:xtzyPanel2
										},{
									    	height:(screen.height-220)/3,
									    	width:(screen.width-200)*0.25,
											  items:xtzyPanel3
										}],
					        renderTo: Ext.getBody()
					    });
            

						myMask.hide();
						 
            var task = {
								run: function(){
									 xtzystore.load();
								},
								interval: intervaltime*1000 // 每30秒一周期
						};
						
						runner.start(task);
  
            
  });
  
</SCRIPT>

</HEAD>
<BODY  style="SCROLLBAR-FACE-COLOR: #f0f0f0;  overflow-x:hidden;  OVERFLOW: scroll; SCROLLBAR-SHADOW-COLOR: #f0f0f0; SCROLLBAR-3DLIGHT-COLOR: #f0f0f0; SCROLLBAR-ARROW-COLOR: #f0f0f0; SCROLLBAR-DARKSHADOW-COLOR: #cccccc;" oncontextmenu="return false" >
</BODY></HTML>
