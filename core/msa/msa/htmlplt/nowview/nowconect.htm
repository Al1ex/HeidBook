<HTML><HEAD><TITLE>网络7层管理和过滤的领导者</TITLE>
<META content="text/html; charset=utf-8" http-equiv=Content-Type>
<META content="text/html; charset=utf-8" http-equiv=Content-Type>
<LINK rel=stylesheet type=text/css href="/ext/resources/css/ext-all.css">
<LINK rel=stylesheet type=text/css href="/ext/resources/css/xtheme-default.css">
<SCRIPT type=text/javascript src="/ext/adapter/ext/ext-base.js"></SCRIPT>
<SCRIPT type=text/javascript  src="/ext/ext-all.js"></SCRIPT>
<SCRIPT type=text/javascript  src="/msa/publicjs/pubstyle.js"></SCRIPT>
<LINK rel=stylesheet type=text/css href="/msa/publiccss/pubcss.css">
<STYLE type=text/css>
HTML {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 9px verdana; HEIGHT: 100%; OVERFLOW: hidden; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px}
BODY {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 9px verdana; HEIGHT: 100%; OVERFLOW: hidden; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px
}
P {
	MARGIN: 5px
}
</STYLE>

<SCRIPT type=text/javascript>
    Ext.BLANK_IMAGE_URL = '/msa/extjs/resources/images/default/s.gif';
    var pagesize;
    var intervaltime;
    var xtzystore;
    var wingtree;
		var grouptext;	  
		var mygid="0";
		var myuser="-1";
		var myglevel=0;
    
    var uname;
    var uid=-1;
		var gname;
		var gid="[$mygid$]";
		var srvname;
		var srvid=-1;
		var ipadd;
		var mytype;
		
		pagesize=100;
    intervaltime=20;
    
    
    Ext.onReady(function(){	
	  		Ext.QuickTips.init();
				var detailEl;				
				var myMask = new Ext.LoadMask(Ext.getBody(), 
				{
				        	msg:"Please wait..."
				});
				myMask.show();
				var treepangroup=new Ext.tree.TreePanel({
						height: 400,
						split: true,
						useArrows:true,
						autoScroll: true,
						rootVisible: false,
						lines: false,
						useArrows: true,
						renderTo:Ext.getBody(),
						tbar:[new Ext.form.TextField({ width: 200,
		     					emptyText:'Find a Group',
							    listeners:{
							       render: function(f){
							         f.el.on('keydown', filterTree, f, {buffer: 350});
		        				 }
		              }
		        })],
						root: new Ext.tree.AsyncTreeNode(),
						loader: new Ext.tree.TreeLoader({
							dataUrl:'/msa/main.xp?Fun=msaGroupTreeView',
							baseAttrs:{uiProvider:Ext.tree.TreeCheckNodeUI},
							baseParams:{Fun:'msaGroupTreeView'} 
						}),
						listeners: {
									    click: function(node, e) {
									    mygid=node.id;			
									    mygname=node.text;					       						       					       
											myglevel=node.getDepth()-1;
											peoplePanel.getLoader().load(peoplePanel.root);
								 	 	  var tempNode=node.parentNode;
								 	 	  if(tempNode.parentNode==null){
								 	 	  	grouptext="/"+node.text;
								 	 	  }else{
								 	 	  	  var tempThreeNode=tempNode.parentNode;
								 	 	  	  if(tempThreeNode.parentNode==null){
								 	 	  	  	grouptext="/"+tempNode.text+"/"+node.text;
								 	 	  	  }else{
								 	 	  	  	var tempFourNode=tempThreeNode.parentNode;
								 	 	  	  	if(tempFourNode.parentNode==null){
								 	 	  	  		grouptext="/"+tempThreeNode.text+"/"+tempNode.text+"/"+node.text;
								 	 	  	  	}else{
								 	 	  	  		var tempFiveNode=tempFourNode.parentNode;
								 	 	  	  		if(tempFiveNode.parentNode==null){
								 	 	  	  			grouptext="/"+tempFourNode.text+"/"+tempThreeNode.text+"/"+tempNode.text+"/"+node.text;
								 	 	  	  		}else{
								 	 	  	  		  var tempSixNode=tempFiveNode.parentNode;
								 	 	  	  		  if(tempSixNode.parentNode==null){
								 	 	  	  		  	grouptext="/"+tempFiveNode.text+"/"+tempFourNode.text+"/"+tempThreeNode.text+"/"+tempNode.text+"/"+node.text;
								 	 	  	  		  }
								 	 	  	  		}
								 	 	  	  	}
								 	 	  	  	
								 	 	  	  }
								 	 	  }
									   }
								}		
			  });		
	
			
			  var hiddenPkgs = [];
			  function filterTree(e){
			   			var text = e.target.value;
			        Ext.each(hiddenPkgs, function(n){
			             n.ui.show();
			        });
			   
			         if(!text){
			             filter.clear();           
			             return;
			         }   
			         treepangroup.expandAll();
			         var re = new RegExp(Ext.escapeRe(text), 'i');         
			         filter.filterBy(function(n){           
			         		var textval = n.text;
			            return !n.isLeaf() || re.test(n.text);
			         });
			 
			         hiddenPkgs = [];
			         treepangroup.root.cascade(function(n) {
			             if(!n.isLeaf()&& n.ui.ctNode.offsetHeight<3){
			                 n.ui.hide();
			                 hiddenPkgs.push(n);
			             }
			         });
			 
			  }
	  
			  var filter = new Ext.tree.TreeFilter(treepangroup, {
					   clearBlank: true,
					   autoClear: true
			  });
	  
 
				var loader=new Ext.tree.TreeLoader({
				    			dataUrl:'/msa/main.xp',
									baseParams:{Fun:'msaUserTree'}
				});
		    loader.on("beforeload", function(loader, node) {
		            loader.baseParams.gid = mygid;
		            loader.baseParams.level = myglevel;
		    });
		    var peoplePanel = new Ext.tree.TreePanel({
		        region:'center',
		        height: 400,
		        useArrows:true,
		        autoScroll:true,
		        animate:true,
		        rootVisible: false,
		        tbar : [new Ext.form.Label({ 
										text : "部门用户列表" 
										})
						], 
		        root: {
		            nodeType: 'async'
		        },
		        loader:loader,
						listeners: {
						    click: function(node, e){
						      myuser=node.id;
						      document.getElementById('uid').value=node.id;
									document.getElementById('uname').value=node.text;
						    }
					  }	
		    });
		    
		    var btn_Manager=Ext.get('uname');
				btn_Manager.on('click', function(){					
							if(!wingtree){
								wingtree = new Ext.Window({
										title: '部门选择',
										closeAction: 'hide',
										width: 450,
									  height:500,
									  layout:'column',
									  region: 'center',
										plain:true,
										items:[
													{	columnWidth:.5,
														items: [treepangroup]
													},
													{	columnWidth:.5,
								   					items: [peoplePanel]
								   				}
								    ],
										bodyStyle:'padding:5px;',
										buttons: [{
					            text: '确定',
											handler  : function(){		
																wingtree.hide();
									  	}
									  	},
									  	{
					            text: '取消',
											handler  : function(){		
																wingtree.hide();
									  	}
									  	}]
									
									});
							}
							var mynode = treepangroup.getNodeById(mygid);
				      mynode.select(); 	
							wingtree.show();		
				});
						
			var runner = new Ext.util.TaskRunner();
			localStore = new Ext.data.JsonStore({//构建用户列表数据存储器
				      root: 'Results',
			        totalProperty: 'totalCount',
			        url:'/msa/main.xp',
			        baseParams:{Fun:'msalocalStore'},
				      fields: [
				         {name: 'uid'},
					       {name: 'uname'}
				      ]
	    });
	    	    
      /*var Cb = new Ext.form.ComboBox({ //用户列表
	         fieldLabel: '下拉框',  
	         valueField:'uid',//json uid
	         hiddenName:'uid',  //虚拟input hidden的name    
	         displayField:'uname',     
	         id:'CbId',      
	         blankText:'所有用户',               
	         emptyText:'所有用户', 
	         renderTo: 'combobox', //渲染到div 的id位置处
	         width:100,              
	         anchor:'95.2%',   
	         selectOnFocus:true,      
	         triggerAction:'all',     
	         store:localStore,    
	         typeAhead:true,      
	         typeAheadDelay:250,    
	         editable:false,       
	         forceSelection:true,   
	         mode: 'local',
	         listeners:{
                "select":function(combo,record,number){
		                	   uname=Ext.get('CbId').dom.value;   	                	
		                	   var alluser=combo.getValue();                
		                     if(typeof(alluser)=="所有用户"){
		                           uid=-1;	
		                     }else{
		                      	   uid=combo.getValue();//取得选择值的uid
		                     }              	                                 
                     }
           }        
	    });*/ 

    // create the data store
    xtzystore = new Ext.data.JsonStore({
        root: 'Results',
        totalProperty: 'totalCount',
        url:'/msa/main.xp',
        baseParams:{
        	Fun:'msaNowConectInfo',
        	showtype:'[$showtype$]',
        	sip:'[$ipadd$]'},
        fields: [
           {name: 'uid'},
		       {name: 'uname'},
				   {name: 'gname'},
			     {name: 'lSip'},
			     {name: 'lDip'},
				   {name: 'nSport', type: 'int'},
		       {name: 'nDport', type: 'int'},
		       {name: 'shBytes'},
		       {name: 'xiaBytes'},
				   {name: 'cService'},
		       {name: 'keyword'},
		       {name: 'cType'},
		       {name: 'srvqos'},
		       {name: 'userqos'},
		       {name: 'vpath'}
        ]
    });
    
    xtzystore.load();//默认数据载入    
    
    
    
    // create the Grid
    
    HlPagingToolbar = Ext.extend(Ext.PagingToolbar, { 
    displayInfo: true, 
    displayMsg: '共{2}条', 
    emptyMsg: "无记录", 
    initComponent : function(){ 
    	   var pageSizeItems = [ 
                     '-','每', 
                     this.inputItem = new Ext.form.NumberField({ 
									    cls: 'x-tbar-page-number', 
									    allowDecimals: false, 
									    allowNegative: false, 
									    enableKeyEvents: true, 
									    maxValue: 300, 
									    maxText: '不允许超过300秒', 
									    selectOnFocus: true, 
									    value: intervaltime, 
									    submitValue: false, 
									    listeners: { 
									        scope: this, 
									        keydown: this.onHlTimeKeyDown, 
									        blur: this.onHlTimeBlur 
									    } 
                     }),'秒刷新','-','每页', 
                     this.inputItem = new Ext.form.NumberField({ 
									    cls: 'x-tbar-page-number', 
									    allowDecimals: false, 
									    allowNegative: false, 
									    enableKeyEvents: true, 
									    maxValue: 500, 
									    maxText: '每页不允许超过500条', 
									    selectOnFocus: true, 
									    value: this.pageSize, 
									    submitValue: false, 
									    listeners: { 
									        scope: this, 
									        keydown: this.onHlPagingKeyDown, 
									        blur: this.onHlPagingBlur 
									    } 
                     }),'条','-',{
						            //pressed: true,
						            icon: '/msa/images/grid.png',
						            enableToggle:true,
						            text: '导出数据到Excel',
						            cls: 'x-btn-text-icon details',
						            toggleHandler: function(btn, pressed){
						                downloadViewDataActive(xtzygrid);
						            }
						        },'-',{
						            icon: '/msa/images/drop-yes.gif',
						            enableToggle:true,
						            text: '选择查询条件',
						            cls: 'x-btn-text-icon details',
						            toggleHandler: function(btn, pressed){								          
										          mywin = new Ext.Window({
																			title: '条件设置',
																			closeAction: 'hide',
																			width: 290,
																			height:screen.height/3-70,
																			plain:true,
																			contentEl:'north',
																			bodyStyle:'padding:5px;',
																			buttons: [{
														            text: '查询',
														            tooltip:'条件查询', //悬停提示  
																        tooltipType:'qtip',  
																				handler  : function(){		
																									sub();
																									mywin.hide();
																		  	}
																		  	}]													
															});
		
										          mywin.show();
		
						        }},'-']; 
		         var userItems = this.items || []; 
		         this.items = userItems.concat(pageSizeItems); 
		         HlPagingToolbar.superclass.initComponent.call(this); 
		    }, 
		    onHlPagingKeyDown: function(field, e){ 
		        if(field.isValid()){ 
		            var k = e.getKey(); 
		             if (k == e.RETURN) { 
		                    e.stopEvent(); 
		                    this.pageSize = field.getValue(); 
		                    pagesize=this.pageSize;
		                    //alert(this.pageSize);
		                    this.doRefresh(); 
		             } 
		        } 
		    }, 
		    onHlPagingBlur: function(field){ 
		        if(field.isValid()){ 
		            this.pageSize = field.getValue(); 
		            //alert(this.pageSize);
		            pagesize=this.pageSize;
		            this.doRefresh(); 
		        } 
		    },
		    onHlTimeKeyDown: function(field, e){ 
		        if(field.isValid()){ 
		            var k = e.getKey(); 
		             if (k == e.RETURN) { 
		                    e.stopEvent(); 
		                    intervaltime = field.getValue(); 
		                    runner.stopAll();
												var task = {
														run: function(){
															 xtzystore.load();
														},
														interval: intervaltime*1000 // 每30秒一周期
												};
												runner.start(task);
		             } 
		        } 
		    }, 
		    onHlTimeBlur: function(field){ 
		        if(field.isValid()){ 
		            intervaltime = field.getValue(); 
		            runner.stopAll();
                var task = {
														run: function(){
															 xtzystore.load();
														},
														interval: intervaltime*1000 // 每30秒一周期
								};
								runner.start(task);
		        } 
		    }  
		});
    
    var pagingBar= new HlPagingToolbar({
        store: xtzystore,
        pageSize: pagesize,
        displayInfo: true});
        

    function bspChange(val){
    	if(val== '17'){
          return 'UDP';
      }else{
      	  return 'TCP';
      }
    }
    
    var xtzygrid = new Ext.grid.GridPanel({
        region:'center',
        store: xtzystore,
        tbar: pagingBar,
        columns: [
            {header: "用户名", width: 80, sortable: true,  dataIndex: 'uname'},
            {header: "部门", width: 90, sortable: true,  dataIndex: 'gname'},
            {header: "服务",   width: 130, sortable: true,  dataIndex: 'cService'},
            {header: "下流量KB", width: 60, sortable: true,  dataIndex: 'shBytes'},
            {header: "上流量KB",   width: 60, sortable: true,  dataIndex: 'xiaBytes'},
            {header: "协议",   width: 50, sortable: true, renderer: bspChange,  dataIndex: 'cType'},
            {header: "源端口",   width: 60, sortable: true,  dataIndex: 'nSport'},
            {header: "源地址",   width: 80, sortable: true,  dataIndex: 'lSip'},
            {header: "目的端口",  width: 60, sortable: true,  dataIndex: 'nDport'},
            {header: "目的地址", width: 80, sortable: true, dataIndex: 'lDip'},
            {id:'keyword',header: "内容", width: 200, sortable: true, dataIndex: 'keyword'},
            {header: "虚拟通道", width: 80, sortable: true, dataIndex: 'vpath'}
        ],
        stripeRows: true,
        autoExpandColumn: 'keyword',
        height:screen.height-210,
        frame:true,
		    collapsible:false,
		    autoScroll:true,
		    draggable:false
    });
    
	  new Ext.Viewport({
				layout: 'border',
				items: [
				 xtzygrid
				],
        renderTo: Ext.getBody()
		});
		

		myMask.hide();
						 
    var task = {
				run: function(){
					 xtzystore.load();
				},
				interval: intervaltime*1000 // 每30秒一周期
		};
		runner.start(task);     
    });
  
  
    function selectinput(){
		   srvname=document.all.service.options[document.all.service.selectedIndex].innerText;
		   srvid=document.all.service.value;
		}
    function sub(){
      ipadd=document.all.ipaddress.value; 
      if(ipadd!=""){   
			    var regIP=/^(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9])\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9]|0)\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9]|0)\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[0-9])$/;
			    var IP_flag=false;
				  if(regIP.test(ipadd)){
						IP_flag= true;
					}else{
						IP_flag= false;
					}
					if (!IP_flag){
					  Ext.MessageBox.alert("提示","对不起，IP地址格式错误");
					  return false;
					}
		  }


      xtzystore.baseParams={
      	  Fun:'msaNowConectInfo',
        	showtype:'[$showtype$]',
        	gid:gid,
					uid:uid,
					sip:ipadd,
					srvid:srvid};
						
			xtzystore.load({ 
					params:{
						Fun:'msaNowConectInfo',
      	    start:0,
						limit:pagesize,
						gid:gid,
						uid:uid,
						sip:ipadd,
						srvid:srvid
					}				
			});
		}
		

		

</SCRIPT>

</HEAD>
<BODY oncontextmenu="return false" style="SCROLLBAR-FACE-COLOR: #f0f0f0;  overflow-x:hidden;  OVERFLOW: scroll; SCROLLBAR-SHADOW-COLOR: #f0f0f0; SCROLLBAR-3DLIGHT-COLOR: #f0f0f0; SCROLLBAR-ARROW-COLOR: #f0f0f0; SCROLLBAR-DARKSHADOW-COLOR: #cccccc;">
<DIV style="DISPLAY: none">
<DIV id=north >

<form id="form1"  name="form1" method="post" action="/msa/main.xp">
	<input type="hidden" id="uid" value="">
		<fieldset style="width:260;height:30;border:2px groove" align=center>
    <legend>过滤元素</legend>  
    <table width="100%" border="0" cellspacing="0" cellpadding="0" >      
        <tr>
         <td  height="20"> 
        	<div align="right"> 
           选择用户</div>
		      </td>  
		      
	        <td height="26">
            <input type="text" class=inputf0  id="uname"  name="uname" size="20" maxlength="48" value=""  style="cursor:hand;background-image:url(/msa/images/drop-yes2.gif);background-position:right bottom; background-repeat: repeat-y">
          </div>
        </td>
      </tr>
    	<tr>
  		<td height="26">
		        <div align="right">IP地址</div>
		      </td>  
		      
	        <td height="26">
	             <input class="inputf0" name="ipaddress" size="20" type="text" value="[$ipadd$]">
	         </td> 
      </tr>
    	<tr>
 			
  			<td height="26"> 
		        <div align="right">服务</div>
		    </td>
		    
		    <td height="26" align="left"> 
      		<div align="left">
						<select name="service"  onchange="selectinput()" class="inputself0" >
							<option value=-1 selected >全部服务</option>
							[$begintable srvlist$]
							<option value=[$srvid$] [$sel$]>[$srvname$]
							[$endtable$]
						  </option>
						</select>
     			</div>
   		  </td> 		 
  		</tr>
    </table>
    </fieldset>

    </td>

  </tr>
  </table>
  </form>

</DIV>
</DIV>

</BODY></HTML>
