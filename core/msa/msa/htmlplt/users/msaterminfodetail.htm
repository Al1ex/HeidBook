<HTML><HEAD><TITLE>网络7层管理和过滤的领导者</TITLE>
<META content="text/html; charset=utf-8" http-equiv=Content-Type>
<LINK rel=stylesheet type=text/css href="/ext/resources/css/ext-all.css">
<LINK rel=stylesheet type=text/css href="/ext/resources/css/xtheme-default.css">
<SCRIPT type=text/javascript src="/ext/adapter/ext/ext-base.js"></SCRIPT>
<SCRIPT type=text/javascript  src="/ext/ext-all.js"></SCRIPT>
<SCRIPT type=text/javascript  src="/msa/publicjs/pubstyle.js"></SCRIPT>
<link rel="stylesheet" type="text/css" href="/msa/publiccss/pubcss.css">
<link rel="stylesheet" href="/msa/publiccss/css.css" type="text/css">
<link href="/Content/IconCls.css" rel="stylesheet" type="text/css" />
<script type=text/javascript  src="/msa/publicjs/select_time_st_1.js"></script>
<script type="text/javascript">
 function addlistfun() {

	var mydispname=listform.dispname.value;
	if(listform.dispname.value==""){
		Ext.MessageBox.alert('提示',"显示名称不能为空!");
			listform.dispname.focus();
			listform.dispname.select();
		return;
	}
	if(!(listform.mac.value=="")){
		var mymac=listform.mac.value;
	  var regmac=/^([0-9a-fA-F]{2})(([/\s:-][0-9a-fA-F]{2}){5})$/;
	  var MAC_flag=false;
	  if(regmac.test(mymac)){
		MAC_flag = true;
		}else{
		MAC_flag = false;
		}
		if (!MAC_flag){
		  Ext.MessageBox.alert('提示',"对不起，mac地址格式错误！");
			listform.mac.focus();
			listform.mac.select();
		  return false;
		}
	}if(!(listform.email.value=="")){
		 var regEmail=/^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$/i;
		var myEmail=listform.email.value;
	  var Email_flag=false;
	  if(regEmail.test(myEmail)){
		Email_flag = true;
		}else{
		Email_flag = false;
		}
		if (!Email_flag){
		  Ext.MessageBox.alert('提示',"对不起，邮箱地址格式错误！");
			listform.email.focus();
			listform.email.select();
		  return false;
		}
	}if(!(listform.money.value=="")){
		var myMoney=listform.money.value;
			for(var i=0;i<myMoney.length;i++)
			 {
			   var myChar= myMoney.toLowerCase().charAt(i);
			   if( ( myChar<'0' || myChar>'9') && myChar!='.' )
			   {
					  alert("对不起,金额必须为数字！");
						listform.money.focus();
						listform.money.select();
						return;
			   }
			 }
	}
//	listform.submit();
	
	Ext.Ajax.request({
		    method : 'POST', 
		    url:'/msa/main.xp', 
		    success: function(response, options) {
		    	  var retxt=response.responseText;
		    	  Ext.MessageBox.alert('提示',retxt); 
						if(retxt.substring(0,1)=="0" ){ 
								Ext.MessageBox.alert('提示','修改用户成功,对于已经在线用户,部分属性在用户下次上线时生效！'); 
						}else{
							Ext.MessageBox.alert('提示',retxt); 
						}
		    },
		    failure: function() {     
		     	Ext.MessageBox.alert('提示','添加用户失败！'); 
		    },
		    params:{
		      Fun:'msaTerminfoUp',
		      username:listform.username.value,
		      dispname:listform.dispname.value,
		      sex:listform.sex.value,
		      Certificate_type:listform.Certificate_type.value,
		      edate:listform.edate.value,
		      Certificate_code:listform.Certificate_code.value,
		      ip:listform.ip.value,
		      mac:listform.mac.value,
		      email:listform.email.value,
		      billing:listform.billing.value,
		      money:listform.money.value,
		      userflag:listform.userflag.value,
		      groupid:listform.groupid.value,
		      annex:listform.annex.value,
		      policy:listform.policy.value,
		      qosid:listform.qosid.value,
		      userid:listform.userid.value,
		      uid:listform.uid.value,
		      ratelimit:listform.ratelimit.value,
		      solo:listform.solo.value,
		      type:"1"
		    } 
	});
	
}
</SCRIPT>
<SCRIPT type=text/javascript>

Ext.BLANK_IMAGE_URL = '/msa/extjs/resources/images/default/s.gif';
Ext.onReady(function(){
	var Servicewin;
	var wing1;
	var wing2;
	var wing3;
	var wing4;
	var paswin;
	Ext.QuickTips.init();
	new Ext.Panel({
		renderTo:Ext.getBody(),
		layout:'fit',
		height:screen.height-210,
		contentEl:'mainviewdiv'
		});
	//设置附件属性
	var root=new Ext.tree.TreeNode({
	id:"root",
	text:"树的根"
	});
	
	var c1=new Ext.tree.TreeNode({
	id:'0',
	text:"不记录表单",
	leaf:true,
	checked:[$c0$]
	});
	var c2=new Ext.tree.AsyncTreeNode({
	id:'1',
	text:"不记录邮件",
	leaf:true,
	checked:[$c1$]
	});
	var c3=new Ext.tree.TreeNode({
	id:'2',
	text:"不记录即时通信内容",
	leaf:true,
	checked:[$c2$]
	});
	var c4=new Ext.tree.AsyncTreeNode({
	id:'3',
	text:"不记录拦截记录",
	leaf:true,
	checked:[$c3$]
	});
	var c5=new Ext.tree.TreeNode({
	id:'4',
	text:"不记录统计信息",
	leaf:true,
	checked:[$c4$]
	});
	
	var c6=new Ext.tree.TreeNode({
	id:'5',
	text:"不记录搜索关键字",
	leaf:true,
	checked:[$c5$]
	});
	var c7=new Ext.tree.AsyncTreeNode({
	id:'6',
	text:"不记录文件传输记录",
	leaf:true,
	checked:[$c6$]
	});
	var c8=new Ext.tree.TreeNode({
	id:'7',
	text:"不记录虚拟身份与轨迹",
	leaf:true,
	checked:[$c7$]
	});
	
	var c9=new Ext.tree.TreeNode({
	id:'8',
	text:"只有在绑定ip地址才能登陆",
	leaf:true,
	checked:[$c8$]
	});
	var c10=new Ext.tree.AsyncTreeNode({
	id:'9',
	text:"启动ip和mac绑定一致才能访问",
	leaf:true,
	checked:[$c9$]
	});
	var c11=new Ext.tree.TreeNode({
	id:'10',
	text:"该帐号不允许多人同时登录",
	leaf:true,
	checked:[$c10$]
	});
	
	
	root.appendChild(c1);
	root.appendChild(c2);
	root.appendChild(c3);
	root.appendChild(c4);
	root.appendChild(c5);
	root.appendChild(c6);
	root.appendChild(c7);
	root.appendChild(c8);
	root.appendChild(c9);
	root.appendChild(c10);
	root.appendChild(c11);
	
		//设置所属部门
	var treepan=new Ext.tree.TreePanel({
		height:400,
		split: true,
		useArrows:true,
		autoScroll: true,
		rootVisible: false,
		lines: false,
		useArrows: true,
		root: new Ext.tree.AsyncTreeNode(),
		loader: new Ext.tree.TreeLoader({
			dataUrl:'/msa/main.xp?Fun=msaGroupTreeView',
			baseParams:{Fun:'msaGroupTreeView'} 
		}),
		listeners: {
					    click: function(node, e) {
								document.getElementById('groupid').value=node.id;
					    	wing1.hide();
					    }
//					    ,
//					    'afterrender': function(){
//	 							var node = treepan.getNodeById("[$gid$]");
//								alert(node);
//					      node.select(); 
//	 						}
					   }
	 });
	 
	 var loader  = treepan.getLoader(); 
	 loader.on("load", function(a,b,c){     
	 		b.findChild("id",[$gid$],true).select(); // can find by any parameter in the json 
	 });  
//	 
//	 treepan.on('afterrender', function(){
//	 							var node = treepan.getNodeById("[$gid$]");
//								alert(node);
//					      node.select(); 
//	 });

	 
	 var button_1 = Ext.get('Service_1');
	 button_1.on('click', function(){
	 	var nodestart;
	 	nodestart=0;
		if(!wing1){
			wing1 = new Ext.Window({
				title: '选择所属部门',
				closeAction: 'hide',
				width: 500,
				height:420,
				plain:true,
				items:treepan,
				bodyStyle:'padding:5px;'
			});
			nodestart=1;
		} 	
		wing1.show();	
    
	});
	
	//服务
	var Servicetree=new Ext.tree.TreePanel({
	  height:400,
		split: true,
		useArrows:true,
		autoScroll: true,
		rootVisible: false,
		lines: false,
		useArrows: true,
		root: new Ext.tree.AsyncTreeNode(),
		loader: new Ext.tree.TreeLoader({
			dataUrl:'/msa/main.xp?Fun=msaServiceTree+type=1+uid=[$userid$]',
			baseParams:{Fun:'msaServiceTree',type:1,uid:[$userid$]}
		})
	 });
	//设置附件属性
	var treepan_3=new Ext.tree.TreePanel({
		height:300,
		split: true,
		useArrows:true,
		autoScroll: true,
		rootVisible: false,
		lines: false,
		useArrows: true,
		root:root
	 });
	//策略树
	var treepan_2=new Ext.tree.TreePanel({
		height:480,
		split: true,
		useArrows:true,
		autoScroll: true,
		rootVisible: false,
		lines: false,
		useArrows: true,
		root: {
        nodeType: 'async'
    },
    loader: new Ext.tree.TreeLoader({
				dataUrl:'/msa/main.xp?Fun=msaPolicyTree+type=1+uid=[$userid$]',
				baseParams:{Fun:'msaPolicyTree',type:1,uid:[$userid$]}
		})
	 });
	//选择服务按钮
//	var Service= Ext.get('Service');
//	Service.on('click', function(){
//		if(!Servicewin){
//		Servicewin = new Ext.Window({
//				title: '选择应用于该通道的服务',
//				closeAction: 'hide',
//				width: 500,
//				height:480,
//				plain:true,
//				items:Servicetree,
//				bodyStyle:'padding:5px;',
//				buttons: [{
//		                text     : '保存选择的服务',
//		                handler  : function(){
//		                seled="00000000000000000000000000000000000";
//		                var selNodes = Servicetree.getChecked();
//				                Ext.each(selNodes, function(node){
//				                    if(node.id=='0'){
//				                      seled = '1' + seled.substring(node.id);
//				                    }else if(node.id=='34'){
//				                      seled = seled.substring(0,node.id) +  '1';
//				                    }else{
//				                      seled = seled.substring(0,node.id) +  '1' + seled.substring(node.id,34);
//				                    }
//				                    document.getElementById('qosid').value=seled
//				                });
//				                Servicewin.hide();
//                    }
//                },{
//                    text     : '选择全部服务',
//                    handler  : function(){
//                    var rootNodes = Servicetree.getRootNode();
//                		if (rootNodes.childNodes && rootNodes.childNodes.length>0)
//                        {
//												var child;
//												seled="00000000000000000000000000000000000";
//                        for (var i=0;i<rootNodes.childNodes.length;i++){
//                            child = rootNodes.childNodes[i];
//                            if(i=='0'){
//				                      seled = '1' + seled.substring(i);
//				                    }else if(i=='34'){
//				                      seled = seled.substring(0,i) +  '1';
//				                    }else{
//				                      seled = seled.substring(0,i) +  '1' + seled.substring(i,34);
//				                    }
//                            child.getUI().toggleCheck(true);
//                        }}
//                        document.getElementById('qosid').value=seled;
//                        Servicewin.hide();
//                    }
//                }]
//			});
//		}
//		Servicewin.show();
//	});
//	var button_3 = Ext.get('Service_3');
//	button_3.on('click', function(){
//		if(!wing3){
//		wing3 = new Ext.Window({
//				title: '选择附加属性',
//				closeAction: 'hide',
//				width: 500,
//				height:380,
//				plain:true,
//				items:treepan_3,
//				bodyStyle:'padding:5px;',
//				buttons: [{
//		                text     : '保存选择的属性',
//		                handler  : function(){
//		                seled="00000000000000000000000000000000";
//		                var selNodes = treepan_3.getChecked();
//				                Ext.each(selNodes, function(node){
//				                    if(node.id=='0'){
//				                      seled = '1' + seled.substring(node.id);
//				                    }else if(node.id=='31'){
//				                      seled = seled.substring(0,node.id) + '1';
//				                    }else{
//				                      seled = seled.substring(0,node.id) +  '1' + seled.substring(node.id,31);
//				                    }
//				                });
//												document.getElementById('annex').value=seled;
//				                wing3.hide();
//                    }
//                },{
//                  text     : '选择全部',
//                  handler  : function(){
//                  var rootNodes = treepan_3.getRootNode();
//              		if (rootNodes.childNodes && rootNodes.childNodes.length>0)
//                      {
//											var child;
//											seled="00000000000000000000000000000000";
//                      for (var i=0;i<rootNodes.childNodes.length;i++){
//                          child = rootNodes.childNodes[i];
//                          if(i=='0'){
//			                      seled = '1' + seled.substring(i);
//			                    }else if(i=='31'){
//			                      seled = seled.substring(0,i) +  '1';
//			                    }else{
//			                      seled = seled.substring(0,i-1) +  '1' + seled.substring(i,32);
//			                    }
//                          child.getUI().toggleCheck(true);
//                      }}
//                      document.getElementById('annex').value=seled;
//                      wing3.hide();
//                  }
//                }]
//			});
//		}
//		wing3.show();
//	});
	var panel_4 =new Ext.Panel({
		layout:'fit',
		autoScroll: true,
		contentEl:'additive'
	});
	var button_4 = Ext.get('Service_4');
	button_4.on('click', function(){
		if(!wing4){
		wing4 = new Ext.Window({
				title: '设置附加参数',
				closeAction: 'hide',
				width: 820,
				height:300,
				plain:true,
				autoScroll:true,
				items:panel_4,
				bodyStyle:'padding:5px;',
				buttons: [{
				text: '保存',
				handler  : function(){
					  var lLimitBytes=document.getElementById('lLimitBytes').value;
					  var maxudp=document.getElementById('maxudp').value;
					  var lLimitTimes=document.getElementById('lLimitTimes').value;
					  var maxtcp=document.getElementById('maxtcp').value;
					  var lLimitBytesw=document.getElementById('lLimitBytesw').value;
					  var maxudpp=document.getElementById('maxudpp').value;
					  var lLimitTimesw=document.getElementById('lLimitTimesw').value;
					  var maxtcpp=document.getElementById('maxtcpp').value;
					  var lLimitBytesm=document.getElementById('lLimitBytesm').value;
					  var maxupp=document.getElementById('maxupp').value;
					  var lLimitTimesm=document.getElementById('lLimitTimesm').value;
					  var maxdownp=document.getElementById('maxdownp').value;
					  var maxpackage=document.getElementById('maxpackage').value;
					  var maxsp=document.getElementById('maxsp').value;
					  var maxBytes=document.getElementById('maxBytes').value;
					  var maxnc=document.getElementById('maxnc').value;
						Ext.Ajax.request({
            method : 'POST',
            url:'/msa/main.xp',
            success: function(response, options){
            	Ext.Msg.alert('操作','保存成功,如果用户已经在线，修改的状态将在用户下次上线时生效');
            },
            failure : function(){
            	Ext.Msg.alert('操作','保存失败');
            },
            params:{Fun:'msaTerminfoUp',type:0,userid:'[$userid$]',lLimitBytes:lLimitBytes,maxudp:maxudp,lLimitTimes:lLimitTimes,maxtcp:maxtcp,lLimitBytesw:lLimitBytesw,maxudpp:maxudpp,lLimitTimesw:lLimitTimesw,maxtcpp:maxtcpp,lLimitBytesm:lLimitBytesm,maxupp:maxupp,lLimitTimesm:lLimitTimesm,maxdownp:maxdownp,maxpackage:maxpackage,maxsp:maxsp,maxBytes:maxBytes,maxnc:maxnc}
					 	});
						wing4.hide();
						}}]
			});
		}
		wing4.show();
	});

	Ext.form.Field.prototype.msgTarget='side';
	Ext.apply(Ext.form.VTypes, {
    repetition: function(val, field) {     //返回true，则验证通过，否则验证失败
        if (field.repetition) {               //如果表单有使用repetition配置，repetition配置是一个JSON对象，该对象提供了一个名为targetCmpId的字段，该字段指定了需要进行比较的另一个组件ID。
            var cmp = Ext.getCmp(field.repetition.targetCmpId);   //通过targetCmpId的字段查找组件
            if (Ext.isEmpty(cmp)) {      //如果组件（表单）不存在，提示错误
                Ext.MessageBox.show({
                    title: '错误',
                    msg: '发生异常错误，指定的组件未找到',
                    icon: Ext.Msg.ERROR,
                    buttons: Ext.Msg.OK
                });
                return false;
            }
            if (val == cmp.getValue()) {  //取得目标组件（表单）的值，与宿主表单的值进行比较。
                return true;
            } else {
                return false;
            }
        }
    },
    repetitionText:'两次密码输入不一致'
	})
	var pasform = new Ext.form.FormPanel({
			  labelWidth: 70, // label settings here cascade unless overridden
        frame:true,
        bodyStyle:'padding:0px 0px 0',
        labelAlign: 'right',border:'0',
		    defaults: {width:160, xtype:"textfield",inputType:'password',allowBlank:false},
        items: [new Ext.form.TextField({
                         inputType: 'password',
                         id: 'newpwd',
                         maxLength: 12,
                         fieldLabel: '新密码',
                         blankText : '密码为空！',
//                         regex:/^[0-9A-Za-z]{3,}$/,
                         regexText:'密码由不少于3位的字母和数字组成',
                         allowBlank: false
                }),
								new Ext.form.TextField({
                         inputType: 'password',
                         id: 'renewpwd',
                         maxLength: 12,
                         fieldLabel: '重复密码',
                         allowBlank: false,
                         blankText : '密码为空！',
//                         regex:/^[0-9A-Za-z]{3,}$/,
                         regexText:'密码由不少于3位的字母和数字组成',
                         vtype: 'repetition',  //指定repetition验证类型
                         repetition: { targetCmpId: 'newpwd' }  //配置repetition验证，提供目标组件（表单）ID
                })
								],
								buttons : [{
								text : '修改',
								handler : function(){
									  var newpwdv = Ext.getCmp("newpwd").getValue();
									  var renewpwdv = Ext.getCmp("renewpwd").getValue();
									  if(newpwdv!=renewpwdv){
									  	Ext.Msg.alert('操作','两次密码输入不一致');
									  	return;
									  }
								    pasform.getForm().submit({
								    		 waitTitle : '提示',
										     waitMsg : '正在提交数据请稍后...',
										     url : '/msa/main.xp',
										     method : 'POST',
										     success : function(form,action){
										     		Ext.Msg.alert('操作','密码已修改成功');
											      paswin.close();
										     },
										     failure : function(form,action){
											     	//var flag=action.result.msg; //返回值中定义msg，{msg:返回内容}
	      										Ext.Msg.alert('操作','旧密码错误');
										     },
										     params:{Fun:'msaUpdatePwd',uid:'[$userid$]'}
								    	});
								}},{
								text : '取消',
								handler : function(){paswin.hide();}
								}]
  });
});
</SCRIPT>
</head>
<body  oncontextmenu="return false"  bgcolor="#ffffff" text="#000000"  leftmargin="1" topmargin="0"   style="SCROLLBAR-FACE-COLOR: #f0f0f0;  overflow-x:hidden;  OVERFLOW: scroll; SCROLLBAR-SHADOW-COLOR: #f0f0f0; SCROLLBAR-3DLIGHT-COLOR: #f0f0f0; SCROLLBAR-ARROW-COLOR: #f0f0f0; SCROLLBAR-DARKSHADOW-COLOR: #cccccc;"  >
	<div id="mainviewdiv" valign="top" align="center" STYLE="position:absolute; top=30; left=30; z-index:1;">
    <form name="listform" action="/msa/main.xp" method="POST">
	<table width="98%" align="center">

		<tr>
      <td colspan="5"><img src="/Content/icons/user_edit.png" align="absmiddle">您可以修改登录名和密码,及所属分类
      	<input type="hidden"  name="password" value="111" class="inputf0" id="password" >
		<input type="hidden"  name="repassword" value="111" class="inputf0" id="repassword">
		<input type="hidden"  name="Certificate_type" value="111" class="inputf0" id="Certificate_type">
		<input type="hidden"  name="Certificate_code" value="" class="inputf0" id="Certificate_code" >
		<input type="hidden" name="email" value="" class="inputf0" id="email" >
		<input type="hidden" name="money" value="0" class="inputf0" id="money" >
		<input type="hidden" name="billing" value="0" class="inputf0" id="billing">
</td>
    </tr>
		<tr>
		  <td width="145">账号</td>
		  <td width="196"><input type="text"  name="username" value="[$username$]" class="inputf0"></td>
		  <td></td>
		  <td></td>
		</tr>
		<tr>
		  <td>显示名</td>
		  <td><input type="text"  name="dispname" value="[$dispname$]" class="inputf0" ></td>
		  <td>IP 地址 </td>
		  <td>
		  	<input type="text" name="ip" value="[$ip$]" class="inputf0" id="ip" >
	  	</td>
		</tr>
		<tr>
		  <td>性别</td>
		  <td><select name="sex" class="inputself0">
              <option value="0" [$sex0$]>女</option>
              <option value="1" [$sex1$]>男</option>
          </select></td>
		  <td>MAC 地址 </td>
		  <td>
		  	<input type="text" name="mac" value="[$mac$]" class="inputf0" id="mac">
	  	</td>
		</tr>
		<tr>
		  <td>该用户有效期限至 </td>
		  <td><input name="edate" type="text" class=inputf0 id="edate" onfocus=setday(edate) value="[$locktime$]" size="20" maxlength="32" readonly></td>
		  <td>用户状态</td>
		  <td>
		  	<select name="userflag" class="inputself0" id="userflag">
					<option value="0" [$useflags0$]>正常</option>
					<option value="99" [$useflags99$]>免监控</option>
					<option value="100" [$useflags100$]>禁止访问</option>
				</select>
	  	</td>
		</tr>
		

		<tr>
          <td colspan="5"><img src="/Content/icons/user_comment.png"  align="absmiddle">帐号的一些附加属性</td>
      </tr>
		<tr>
			  <td width="145"><input type="button" id="Service_1" class=inputf0 border="0" name="Service_1" value="设置所属部门"></td>
		  <td width="196">&nbsp;</td>
		  <!--<td width="106"><input type="button" id="Service_3" class=inputf0 border="0" name="Service_3" value="设置附加属性"></td> -->
		  <td width="502" colspan="2"><input type="button" id="Service_4" class=inputf0 border="0" name="Service_4" value="设置附加参数"></td>
		  <td width="1">&nbsp;</td>
	  </tr>

		<tr>
		  <td colspan="4"><!--<img src="/Content/icons/world_link.png" alt=""  align="absmiddle"> 帐号通道属性 -->
		    <input type="hidden" name="Fun" value="msaTerminfoUp">
		        <input type="hidden" name="groupid" id="groupid" value="[$gid$]">
            <input type="hidden" name="annex" id="annex" value="[$moreflag$]">
            <input type="hidden" name="policy" id="policy" value="[$policyid$]">
            <input type="hidden" name="qosid" id="qosid" value="[$topSrvNameList$]">
            <input type="hidden" id="Service_5" class=inputf0 border="0" name="Service_5" value="设置策略组">
		  </td>
            <input type="hidden" name="userid" id="userid" value="[$userid$]">
            <input type="hidden" name="ratelimit" class="inputself0" id="ratelimit" value="0">
            <input type="hidden" name="solo" class="inputself0" value="0">
            <input type="hidden" name="uid" id="uid" value="[$userid$]"></td>
	  </tr>
		<!--<tr>
		  <td width="145">带宽</td>
		  <td width="196"><select name="ratelimit" class="inputself0" id="ratelimit">
      <option value="0"[$qsel0$]>不启动人员qos</option>
			[$begintable qoslist$]
		  <option value="[$qosid$]" [$qsel1$] >[$qosname$]</option>
			[$endtable$]
      </select></td>
		  <select name="solo" class="inputself0" style="display:none">
            <option value="0" [$ratetype0$]>独享一通道</option>
          </select>
		  <td><input type="button" id="Service" class=inputf0 border="0" name="Service" value="选择应用于该通道的服务"></td>		  
		  <td>&nbsp;</td>
		</tr>-->
		<hr/>
	<tr><td colspan="4"><hr/></td></tr>
		<tr><td>
			<input type="button" onClick="addlistfun();"  value="保存/修改"  class=inputf0 size=10>
			<input type="hidden" name="type" value="1" >
		</td>
		<td>&nbsp;</td>
		</tr>
	</table>
</form>
	<div style='DISPLAY:none'><div id="additive" >
			<table width="790" height="164" border="0" align="center">
			<input type="hidden" name="lLimitBytesw" value="[$lLimitBytesw$]" id="lLimitBytesw">
			<input name="maxudpp" type="hidden" value="[$maxudpp$]" id="maxudpp" class="inputf0">
			<input name="lLimitTimesw" type="hidden" value="[$lLimitTimesw$]" id="lLimitTimesw" class="inputf0">
			<input name="maxtcpp" type="hidden" value="[$maxtcpp$]" id="maxtcpp" class="inputf0">
			<input name="lLimitBytesm" type="hidden" value="[$lLimitBytesm$]" id="lLimitBytesm" >
			<input name="maxupp" type="hidden" value="[$maxupp$]" id="maxupp" class="inputf0">
			<input name="lLimitTimesm" type="hidden" value="[$lLimitTimesm$]" id="lLimitTimesm" class="inputf0">
			<input name="maxdownp" type="hidden" value="[$maxdownp$]" id="maxdownp" class="inputf0">
			<input name="maxpackage" type="hidden" value="[$maxpackage$]" id="maxpackage" class="inputf0">
			<input name="maxsp" type="hidden" value="[$maxsp$]" id="maxsp" class="inputf0">
			<input name="maxBytes" type="hidden" value="[$maxBytes$]" id="maxBytes" class="inputf0">
			<input name="maxnc" type="hidden" value="[$maxnc$]" id="maxnc" class="inputf0">
				  <tr>
					<td width="170">每天最大的上网流量</td>
					<td width="200"><input name="lLimitBytes" type="text" id="lLimitBytes" class="inputf0" value="[$lLimitBytes$]" />
					  <font color="#999999">(Byte)</font></td>
					<td width="170">最多<span lang="EN-US" xml:lang="EN-US">udp</span>连接</td>
					<td width="200"><input name="maxudp" type="text" class="inputf0" value="[$maxudp$]" id="maxudp" />
					<font color="#999999">(条)</td>
				  </tr>
				  <tr>
					<td>每天最大的上网时间</td>
					<td><input name="lLimitTimes" type="text" class="inputf0" value="[$lLimitTimes$]" id="lLimitTimes" />
					<font color="#999999">(秒)</font></td>
					<td>最多<span lang="EN-US" xml:lang="EN-US">tcp</span>连接</td>
					<td><input name="maxtcp" type="text" value="[$maxtcp$]" id="maxtcp" class="inputf0"/>
					<font color="#999999">(条)</td>
				  </tr>
				</table>
		</div></div>
</body>
</html>
