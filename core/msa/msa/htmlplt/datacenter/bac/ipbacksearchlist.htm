<HTML><HEAD><TITLE>网络7层管理和过滤的领导者</TITLE>
<META 	content="text/html; charset=utf-8" http-equiv=Content-Type>
<LINK 	rel="stylesheet" type="text/css" href="/ext/resources/css/ext-all.css">
<LINK 	rel="stylesheet" type="text/css" href="/ext/resources/css/xtheme-default.css"/>
<link 	rel="stylesheet" type="text/css" href="/Content/IconCls.css"/>
<link 	rel="stylesheet" type="text/css" href="/msa/publiccss/css.css"/>
<link 	rel="stylesheet" type="text/css" href="/msa/publiccss/pubcss.css"/>
<link   rel="stylesheet" type="text/css" href="/msa/publiccss/grid-examples.css"/>
<SCRIPT type=text/javascript  src="/ext/adapter/ext/ext-base.js"></SCRIPT>
<SCRIPT type=text/javascript  src="/ext/ext-all.js"></SCRIPT>
<SCRIPT type=text/javascript  src="/msa/publicjs/pubstyle.js"></SCRIPT>
<script type=text/javascript  src="/msa/publicjs/select_time.js"></script>
<script type=text/javascript  src="/msa/publicjs/exportexcel.js"></script>

<script type="text/javascript">
    Ext.BLANK_IMAGE_URL = '/msa/extjs/resources/images/default/s.gif';
    var xtzygrid;
    var xtzystore;
    var pagesize;
    var myselsrv=-1;
    var mytwoselsrv=-1;
    var onetext="";
    var twotext="";
    var wing1;
    var ltServiceWin;  
    var grouptext;	  
    var mygname;
		var mygid=-1;
		var myglevel=-1;
		pagesize=100;
		
		function mysearch(){
		  var  stopflag;
		  var  myseldate,myseltime,mysip,mydip,mydport,myvpath,mysearchconX,mysearchname;
		  mysearchname=searchname.value;
		  if(seldate.value==""||seltime.value==""){
							Ext.MessageBox.alert("系统提示","日期不能为空!");
							return;
			}
		  if(mysearchname==""){
		    Ext.MessageBox.alert('提示','必须设置查询名称！'); 
		  	return;
		  }
		  myseldate=seldate.value;
		  myseltime=seltime.value;
		  mysip=sip.value;
		  mydip=dip.value;
		  mydport=dport.value;
		  myvpath=vpath.value;//虚拟通道		  
		  mysearchconX=searchconX.value;
      stopflag=0;
		  
		  Ext.MessageBox.show({
							msg: '系统查询中，这需要一段时间，您可以继续等待或者稍后察看结果',
							progressText: 'waitting...',
							width:300,
							wait:true,
							waitConfig: {interval:500},
							icon:'ext-mb-download'
			});
//			setTimeout(function(){
//						if(stopflag==0){
//							Ext.MessageBox.hide();
//							xtzystore.load();
//						}
//						stopflag=1;
//			}, 15000); 
		  
		  Ext.Ajax.request({
              method : 'POST', 
              url:'/msa/main.xp', 
              success: function(response, options) { 
              	var retxt=response.responseText;
								if(retxt.substring(0,1)!=""){
									Ext.MessageBox.hide();
									xtzystore.load();
								}
              },
              failure : function() {
                Ext.MessageBox.hide();      
               	Ext.MessageBox.alert('提示','操作失败!'); 
              },
              params:{
                Fun:'msaipbacksearch',
                seldate:myseldate,
                seltime:myseltime,
                sip:mysip,
                dip:mydip,
                dport:mydport,
                selsrv:myselsrv,
                twoselsrv:mytwoselsrv,
                vpath:myvpath,
                gid:mygid,
                gname:mygname,
                glevel:myglevel,
                searchconX:mysearchconX,               
                searchname:mysearchname,
                showtype:1
              } 
				});                
		}
		
		function myexport(){
		  var  myseldate,myseltime,mysip,mydip,mydport,myvpath,mysearchconX;
		  myseldate=seldate.value;
		  myseltime=seltime.value;
		  mysip=sip.value;
		  mydip=dip.value;
		  mydport=dport.value;
		  myvpath=vpath.value;//虚拟通道		  
		  mysearchconX=searchconX.value;	  
		  
		 	if(seldate.value==""||seltime.value==""){
							Ext.MessageBox.alert("系统提示","日期不能为空!");
							return;
			}
		  
		  Ext.MessageBox.show({
			     msg: '数据导出中，请稍后',
			     progressText: 'apply...',
			     width:300,
			     wait:true,
			     waitConfig: {interval:500},
			     icon:'ext-mb-download'
			});
	    
	    Ext.Ajax.request({
					          method : 'POST', 
					          url:'/msa/main.xp', 
					          success: function(response, options) { 
					          	var retxt=response.responseText;
											if(retxt.substring(0,1)!=""){												              										
												Ext.Ajax.request({
									          method : 'POST', 
									          url:'/msa/main.xp', 
					          				success: function(response, options) { 
				          						    var resptxt=response.responseText;
						          					  if(resptxt.substring(0,1)==1){
						          					    	 Ext.MessageBox.hide();													
																		   var usrl="/tempdir/"+retxt+"/download.xls";		
					                             downloadFile(usrl);
						          					   }else{
						          					   		 Ext.MessageBox.hide();
										           	  		 Ext.MessageBox.alert('提示','导出失败'); 
						          					   }	
					          				},
									          failure : function() { 
									          	  Ext.MessageBox.hide();
									           	  Ext.MessageBox.alert('提示','导出失败'); 
									          },
												    params:{ Fun:'msaIfCreatXlsOK',
												    	tempdir:retxt
												    }
												}); 	      
												       																  
										}else{															
											Ext.MessageBox.alert('提示','导出失败'); 
										}
				          },
				          failure : function() {   
				           	  Ext.MessageBox.alert('提示','导出失败'); 
				          },
				          params:{
				              Fun:'msaipbacksearch',
												  seldate:myseldate,
					                seltime:myseltime,
					                sip:mysip,
					                dip:mydip,
					                dport:mydport,
					                selsrv:myselsrv,
					                twoselsrv:mytwoselsrv,
					                vpath:myvpath,
					                gid:mygid,
					                gname:mygname,
					                glevel:myglevel,
					                searchconX:mysearchconX,               
					                searchname:"1",
					                exportaction:"1",
					                showtype:1
				            } 
					});          
		}
		
		
   Ext.onReady(function(){
		Ext.QuickTips.init();
		var detailEl;
		var win;
						
		var myMask = new Ext.LoadMask(Ext.getBody(), 
		{
		        	msg:"Please wait..."
		});
		myMask.show();
	
  
	  var treepangroup=new Ext.tree.TreePanel({
				height:300,
				split: true,
				useArrows:true,
				autoScroll: true,
				rootVisible: false,
				lines: false,
				useArrows: true,
				tbar:[new Ext.form.TextField({ width: 200,
	   					emptyText:'Find a Group',
					    listeners:{
					       render: function(f){
					         f.el.on('keydown', filterTree, f, {buffer: 350});
	      				 }
	            }
	      })],
				root: new Ext.tree.AsyncTreeNode(),
				loader: new Ext.tree.TreeLoader({
					dataUrl:'/msa/main.xp?Fun=msaGroupTreeView',
					baseAttrs:{uiProvider:Ext.tree.TreeCheckNodeUI},
					baseParams:{Fun:'msaGroupTreeView'} 
				}),
				listeners: {
							    click: function(node, e) {
							    mygid=node.id;			
							    mygname=node.text;					       						       					       
									myglevel=node.getDepth()-1;
						 	 	  var tempNode=node.parentNode;
						 	 	  if(tempNode.parentNode==null){
						 	 	  	grouptext="/"+node.text;
						 	 	  }else{
						 	 	  	  var tempThreeNode=tempNode.parentNode;
						 	 	  	  if(tempThreeNode.parentNode==null){
						 	 	  	  	grouptext="/"+tempNode.text+"/"+node.text;
						 	 	  	  }else{
						 	 	  	  	var tempFourNode=tempThreeNode.parentNode;
						 	 	  	  	if(tempFourNode.parentNode==null){
						 	 	  	  		grouptext="/"+tempThreeNode.text+"/"+tempNode.text+"/"+node.text;
						 	 	  	  	}else{
						 	 	  	  		var tempFiveNode=tempFourNode.parentNode;
						 	 	  	  		if(tempFiveNode.parentNode==null){
						 	 	  	  			grouptext="/"+tempFourNode.text+"/"+tempThreeNode.text+"/"+tempNode.text+"/"+node.text;
						 	 	  	  		}else{
						 	 	  	  		  var tempSixNode=tempFiveNode.parentNode;
						 	 	  	  		  if(tempSixNode.parentNode==null){
						 	 	  	  		  	grouptext="/"+tempFiveNode.text+"/"+tempFourNode.text+"/"+tempThreeNode.text+"/"+tempNode.text+"/"+node.text;
						 	 	  	  		  }
						 	 	  	  		}
						 	 	  	  	}					 	 	  	  	
						 	 	  	  }
						 	 	  }
									 document.getElementById("group").value=grouptext;
							     wing1.hide();
							   }
						}		
	  });		
	
	  var hiddenPkgs = [];
	  function filterTree(e){
	   			var text = e.target.value;
	        Ext.each(hiddenPkgs, function(n){
	             n.ui.show();
	        });
	   
	         if(!text){
	             filter.clear();           
	             return;
	         }   
	         treepangroup.expandAll();
	         var re = new RegExp(Ext.escapeRe(text), 'i');         
	         filter.filterBy(function(n){           
	         		var textval = n.text;
	            return !n.isLeaf() || re.test(n.text);
	         });
	 
	        // hide empty packages that weren't filtered
	         hiddenPkgs = [];
	         treepangroup.root.cascade(function(n) {
	             if(!n.isLeaf()&& n.ui.ctNode.offsetHeight<3){
	                 n.ui.hide();
	                 hiddenPkgs.push(n);
	             }
	         });
	 
	  }
	  
	  var filter = new Ext.tree.TreeFilter(treepangroup, {
			   clearBlank: true,
			   autoClear: true
	  });
  

    
		var btn_Manager=Ext.get('group');
		btn_Manager.on('click', function(){
					if(!wing1){
						wing1 = new Ext.Window({
								title: '部门选择',
								closeAction: 'hide',
								width: 310,
								height:320,
								plain:true,
								items:[
										treepangroup						
								],
								bodyStyle:'padding:5px;',
								buttons: [{
			            text: '确定',
									handler  : function(){		
														wing1.hide();
							  	}
							  	},
							  	{
			            text: '取消',
									handler  : function(){		
										        document.getElementById("group").value="";
										        mygid=-1;
														myglevel=-1;
														wing1.hide();
							  	}
							  	}]
							
							});
						}
						wing1.show();		
		}); 
	
	

		var oneServiceTree=new Ext.tree.TreePanel({
        split: true,
        height: 400,
        useArrows:true,
        autoScroll: true,
        rootVisible: false,
        lines: false,
        useArrows: true,
        checkModel:false,
        tbar : [new Ext.form.Label({ 
										text : "一级服务" 
										})
				], 
        loader: new Ext.tree.TreeLoader({
        	  dataUrl:'/msa/main.xp',
						baseParams:{Fun:'msaOneServiceTree'}
        }),
        root: new Ext.tree.AsyncTreeNode(),
        listeners: {
							    click: function(node, e) {		
							    	    myselsrv=node.id;
							    	   	onetext=node.text;										    						        						       					       
								 		    twoServiceTree.getLoader().load(twoServiceTree.root);
							   }
				}		
		});
		 
	  var twoServiceTree=new Ext.tree.TreePanel({
        split: true,
        height: 400,
        width: 400,
        useArrows:true,
        autoScroll: true,
        rootVisible: false,
        lines: false,
        useArrows: true,
        checkModel:false,
        tbar : [new Ext.form.Label({ 
										text : "二级服务" 
										})
				], 
        loader: new Ext.tree.TreeLoader({
        	  dataUrl:'/msa/main.xp',
						baseParams:{Fun:'msaTwoServiceTree'}
        }),
        root: new Ext.tree.AsyncTreeNode(),
        listeners: {
							    click: function(node, e) {				      						       					       
										    mytwoselsrv=node.id;
										    twotext=node.text;		
							   }
				}
		});
		
		twoServiceTree.loader.on("beforeload", function(loader, node) {
	        loader.baseParams.id=myselsrv;
	  });

		var serviceButton= Ext.get('servicetree');
		serviceButton.on('click', function(){
				if(!ltServiceWin){
					ltServiceWin = new Ext.Window({
						title: '选择服务',
						closeAction: 'hide',
            width: 400,
					  height:500,
					  layout:'column',
					  region: 'center',
						plain:true,
						items:[
									{	columnWidth:.5,
										items: [oneServiceTree]
									},
									{	columnWidth:.5,
				   					items: [twoServiceTree]
				   				}
				    ],
						bodyStyle:'padding:5px;',
						buttons:[{
				                text     : '确定',
				                handler  : function(){	
				                	  if(onetext!="" && twotext!=""){
				                	  	 document.getElementById("servicetree").value="/"+onetext+"/"+twotext;   
				                	  }else if(onetext!=""&& twotext==""){
				                	  	 document.getElementById("servicetree").value="/"+onetext;   
				                	  }else if(onetext==""){
				                	  	 document.getElementById("servicetree").value="/";   
				                	  }					                	  			                	  
							    					ltServiceWin.hide();
		                    }
	                   },{
		                    text     : '取消',
		                    handler  : function(){	
		                    	  document.getElementById("servicetree").value="";   
		                    	  myselsrv=-1;
	                    	  	mytwoselsrv=-1;
		                    		onetext="";    		
				                	  twotext="";													
		                        ltServiceWin.hide();
		                    }			               
			               }]
					});
				}
				ltServiceWin.show();
		});
		  
		xtzystore = new Ext.data.JsonStore({
	        root: 'Results',
	        totalProperty: 'totalCount',
	        url:'/msa/main.xp',
	        baseParams:{Fun:'msaNewSearchList',showtype:'1'},
	        fields: [
			       {name: 'sname'},
				     {name: 'sdate'},
				     {name: 'suser'},
				     {name: 'scon'},
				  	 {name: 'myurl'},
					   {name: 'stype'},
					   {name: 'fproc'}
			    ]
	   });
    


  	HlPagingToolbar = Ext.extend(Ext.PagingToolbar, { 
    displayInfo: true, 
    displayMsg: '显示第 {0} 条到 {1} 条记录，共 {2} 条', 
    emptyMsg: "无记录", 
    initComponent : function(){ 
        var pageSizeItems = [ 
                     '-','每页', 
                      this.inputItem = new Ext.form.NumberField({ 
									    cls: 'x-tbar-page-number', 
									    allowDecimals: false, 
									    allowNegative: false, 
									    enableKeyEvents: true, 
									    maxValue: 500, 
									    maxText: '每页不允许超过500条', 
									    selectOnFocus: true, 
									    value: this.pageSize, 
									    submitValue: false, 
									    listeners: { 
									        scope: this, 
									        keydown: this.onHlPagingKeyDown, 
									        blur: this.onHlPagingBlur 
									    } 
                     }),'条','-',{
						            //pressed: true,
						            icon: '/msa/images/grid.png',
						            enableToggle:true,
						            text: '导出本页数据到Excel',
						            cls: 'x-btn-text-icon details',
						            toggleHandler: function(btn, pressed){
						                downloadViewDataActive(xtzygrid);
						            }
						        },'-',{
				            icon: '/msa/images/drop-yes.gif',
				            enableToggle:true,
				            text: '选择条件',
				            cls: 'x-btn-text-icon details',
				            toggleHandler: function(btn, pressed){								          
								          mywin = new Ext.Window({
																	title: '条件设置',
																	closeAction: 'hide',
																	width: 290,
																	height:380,
																	plain:true,
																	contentEl:'north',
																	bodyStyle:'padding:5px;',
																	buttons: [{
												            text: '查询',
												            tooltip:'按条件查询并保存数据', //悬停提示  
														        tooltipType:'qtip',  
																		handler  : function(){		
																							mysearch();
																							mywin.hide();
																  	}
																  	},
																  	{
												            text: '导出',
												            tooltip:'直接导出本时段搜索数据', //悬停提示  
														        tooltipType:'qtip',  
																		handler  : function(){		
																			        myexport();
																							mywin.hide();
																  	}
																  	}]													
													});
								          mywin.show();

				        }},'-']; 
         var userItems = this.items || []; 
         this.items = userItems.concat(pageSizeItems); 
         HlPagingToolbar.superclass.initComponent.call(this); 
    }, 
    onHlPagingKeyDown: function(field, e){ 
        if(field.isValid()){ 
            var k = e.getKey(); 
             if (k == e.RETURN) { 
                    e.stopEvent(); 
                    this.pageSize = field.getValue(); 
                    pagesize=this.pageSize;
                    this.doRefresh(); 
             } 
        } 
    }, 
    onHlPagingBlur: function(field){ 
        if(field.isValid()){ 
            this.pageSize = field.getValue(); 
            pagesize=this.pageSize;
            this.doRefresh(); 
        } 
    } 
		});
    var pagingBar= new HlPagingToolbar({
        store: xtzystore,
        pageSize: pagesize,
        displayInfo: true});
    
    xtzygrid = new Ext.grid.GridPanel({
        store: xtzystore,
        viewConfig:{forceFit: false, scrollOffset: 1},
        columns: [
            {header: "查询结果标记", width: 100, sortable: true, dataIndex: 'sname'},
            {header: "查询时间",  width: 100, sortable: true,  dataIndex: 'sdate'},
            {header: "查询条件",  width: 500, sortable: true,  dataIndex: 'scon'},
            {header: "查询人",    width: 80, sortable: true,  dataIndex: 'suser'},
            {header: "状态", width:200, sortable: true,  dataIndex: 'fproc'}
        ],
        tbar: pagingBar,
        stripeRows: true,
        //autoExpandColumn: 'sname',
        height:screen.height-210,
        frame:true,
		    collapsible:false,
		    loadMask:{msg:'正在加载数据，请稍侯……'},
		    draggable:false
    }); 
   
		 xtzygrid.on('render', function(grid) {      
       var store = xtzygrid.getStore();     
       var view = xtzygrid.getView();          
       xtzygrid.tip = new Ext.ToolTip({      
           target: view.mainBody,         
           delegate: '.x-grid3-row',    
           trackMouse: true,        
           renderTo: document.body,             
           listeners: {      
               beforeshow: function updateTipBody(tip) {      
                   var rowIndex = view.findRowIndex(tip.triggerElement);      
                   var record = store.getAt(rowIndex);   
                   tip.body.dom.innerHTML =  '内容:'+record.get('scon');      
               }      
           }      
       });      
      }); 
    

    function showsysdelrule(btn){
					        if(btn=='yes'){
					        	var record = xtzygrid.getStore().getAt(detailEl);
									  var myurl=record.get("myurl");   
									  xtzystore.load({params:{Fun:'msaNewSearchList',showtype:'1',delfile:myurl}});   
					        }
					        
					};

      var rightClick  = new Ext.menu.Menu({
                id:'feeds-ctx',
                items: [{
                    id:'shanchubaogao',
                    iconCls:'load-icon',
                    text:'删除查询结果',
                    scope: this,
                    handler:function(){
                        Ext.MessageBox.confirm('Confirm', '您确认要删除吗?', showsysdelrule);
                    }
                },{
                    id:'chakan',
                    iconCls:'load-icon',
                    text:'察看查询结果',
                    scope: this,
                    handler:function(){
                        var record = xtzygrid.getStore().getAt(detailEl);
                        var myurl=record.get("myurl"); 
                        var myurlmore="ipsearch/" + myurl + "/search";                        
												xtzystore1 = new Ext.data.JsonStore({
										        root: 'Results',
										        totalProperty: 'totalCount',
										        url:'/msa/main.xp',
										        baseParams:{Fun:'msaAccessList',url:myurlmore},
										             fields: [
																     {name: 'v1'},//用户ID
																	   {name: 'v2'},//用户名
																	   {name: 'v3'},//显示名
																	   {name: 'v4'},//部门			
																	   {name: 'v5'},
																	   {name: 'v6'},
																	   {name: 'v7'},
																	   {name: 'v8'},		    
																	   {name: 'v15'},//传输方向
																	   {name: 'v12'},//自身MAC
																	   {name: 'v17'},//开始连接时间
																	   {name: 'v18'},//上流量
																	   {name: 'v19'},//下流量
																	   {name: 'v20'},//数据包数据
																	   {name: 'v21'},//一级服务
																	   {name: 'v22'},//二级服务
																	   {name: 'v23'},//虚拟通道
																	   {name: 'v24'} //关键字
															    ]
										    });
										    xtzystore1.baseParams={Fun:'msaAccessList',url:myurlmore};
										    xtzystore1.load({params:{Fun:'msaAccessList',url:myurlmore,start:0,limit:pagesize}});
										    
										   HlPagingToolbar1 = Ext.extend(Ext.PagingToolbar, { 
												    displayInfo: true, 
												    displayMsg: '显示第 {0} 条到 {1} 条记录，共 {2} 条', 
												    emptyMsg: "无记录", 
												    initComponent : function(){ 
												        var pageSizeItems = [ 
												                     '-','每页', 
												                     this.inputItem = new Ext.form.NumberField({ 
																					    cls: 'x-tbar-page-number', 
																					    allowDecimals: false, 
																					    allowNegative: false, 
																					    enableKeyEvents: true, 
																					    maxValue: 500, 
																					    maxText: '每页不允许超过500条', 
																					    selectOnFocus: true, 
																					    value: this.pageSize, 
																					    submitValue: false, 
																					    listeners: { 
																					        scope: this, 
																					        keydown: this.onHlPagingKeyDown, 
																					        blur: this.onHlPagingBlur 
																					    } 
												                     }),'条','-','-']; 
												         var userItems = this.items || []; 
												         this.items = userItems.concat(pageSizeItems); 
												         HlPagingToolbar1.superclass.initComponent.call(this); 
												    }, 
												    onHlPagingKeyDown: function(field, e){ 
												        if(field.isValid()){ 
												            var k = e.getKey(); 
												             if (k == e.RETURN) { 
												                    e.stopEvent(); 
												                    this.pageSize = field.getValue(); 
												                    pagesize=this.pageSize;
												                    this.doRefresh(); 
												             } 
												        } 
												    }, 
												    onHlPagingBlur: function(field){ 
												        if(field.isValid()){ 
												            this.pageSize = field.getValue(); 
												            pagesize=this.pageSize;
												            this.doRefresh(); 
												        } 
												    } 
												});
										    
										    
										    var pagingBar1= new HlPagingToolbar1({
									        store: xtzystore1,
									        pageSize: pagesize,
									        displayInfo: true});
									     
									      var xtzygrid1 = new Ext.grid.GridPanel({
										        region:'center',
										        store: xtzystore1,
										        viewConfig:{forceFit: false, scrollOffset: 0},
										        columns: [
										            	  {header: "用户名", width: 100, sortable: true, dataIndex: 'v2'},
												            {header: "显示名",   width: 100, sortable: true, dataIndex: 'v3'},
												            {header: "部门",   width: 100, sortable: true,  dataIndex: 'v4'},
												            {header: "传输方向",   width: 300, sortable: true,  dataIndex: 'v15'},
												            {header: "MAC", width: 150, sortable: true, dataIndex:'v12'},
												            {header: "开始连接时间",  width: 120, sortable: true,  dataIndex: 'v17'},
												            {header: "上行流量",  width: 120, sortable: true,  dataIndex: 'v18',hidden:true},
												            {header: "下行流量",  width: 120, sortable: true,  dataIndex: 'v19',hidden:true},
												            {header: "数据包数目",  width: 120, sortable: true,  dataIndex: 'v20',hidden:true},
												            {header: "一级服务",  width: 120, sortable: true,  dataIndex: 'v21',hidden:true},
												            {header: "二级服务",  width: 120, sortable: true,  dataIndex: 'v22',hidden:true},
												            {header: "虚拟通道",  width: 120, sortable: true,  dataIndex: 'v23',hidden:true},
															      {id:'keyid',header: "关键字", width: 120, sortable: true, dataIndex:'v24'}
										        ],
										        tbar: pagingBar1,
										        stripeRows: true,
										        autoExpandColumn: 'keyid',
										        height:screen.height-210,
										        frame:true,
												    collapsible:false,
												    loadMask:{msg:'正在加载数据，请稍侯……'},
												    draggable:false
										    });
										    
										    xtzygrid1.on('mouseover',function(e){//添加mouseover事件
														  var index = xtzygrid1.getView().findRowIndex(e.getTarget());//根据mouse所在的target可以取到列的位置	  
														  if(index!==false){//当取到了正确的列时，（因为如果传入的target列没有取到的时候会返回false）
																	   var record = xtzygrid1.getStore().getAt(index);//把这列的record取出来
																	   var str = '<div style="width:200px;height:80px;font: normal 11px tahoma,arial,helvetica,sans-serif;margin:0 !important;line-height:14px; color:#444;padding:0;"><table width="100%"  border="0" cellspacing="0" cellpadding="0" ><tr><td height="50%" width="35%">上行流量</td><td height="50%" width="35%">'+record.get('v18')+'</td></tr><tr><td height="50%" width="35%">下行流量</td><td height="50%" width="35%">'+record.get('v19')+'</td></tr><tr><td height="50%" width="35%">数据包数目</td><td height="50%" width="35%">'+record.get('v20')+'</td></tr><tr><td height="50%" width="35%">一级服务</td><td height="50%" width="35%">'+record.get('v21')+'</td></tr><tr><td height="50%" width="35%">二级服务</td><td height="50%" width="35%">'+record.get('v22')+'</td></tr><tr><td height="50%" width="35%">虚拟通道</td><td height="50%" width="35%">'+record.get('v23')+'</td></tr></table></div>';	   
															 			 var rowEl = Ext.get(e.getTarget());//把target转换成Ext.Element对象
																	   rowEl.set({
																	    'ext:qtip':str 
																	   },false);
															}
												});
                        var mywin =new  Ext.Window(
							          {
							                    id: 'viewpanel',
							                    title: '察看查询结果',
							                    height: 450,
							                    width: 400,
							                    closeAction: 'close',
							                    modal: 'true',
							                    maximizable:'true',
							                    margins:'0 5 0 0',
							                    layout: 'border',
											  					items: [xtzygrid1]
							          }); 
							          mywin.show(); 
							          mywin.maximize(); 
                    }
                },{
                    id:'xiazai',
                    iconCls:'load-icon',
                    text:'下载查询结果',
                    scope: this,
                    handler:function(){
                        var record = xtzygrid.getStore().getAt(detailEl);
                        var myfile=record.get("myurl"); 
                        var myurl="/msa/main.xp?Fun=msaDataCenetrDownLoad+downLoadFileName=download.xls+downLoadFile=ipsearch/"+ myfile + "/download.xls";
								        downloadFile(myurl);
                    }
                } 
				]});
                
					    xtzygrid.addListener('rowclick', rightClickFn);
					    function rightClickFn(client, rowIndex, e) {
					               
					                 detailEl=  rowIndex;
					                 
					                 var record = xtzygrid.getStore().getAt(detailEl);
					                 
												   var type=record.get("type");
												   if(type=='form'||type=='mail'){
													   rightClickS.showAt(e.getXY()); 
												   }else{
                             rightClick.showAt(e.getXY()); 
												   }
					                
					    }   


      
    
     var mainPanel= {
					id: 'main-panel',
					region:'center',
          collapsible: false,
          split:true,
          width: 135,
          height:screen.height-350,
          minSize: 125,
          maxSize: 400,
          layout:'fit',
          margins:'0 5 0 0',
          items:[xtzygrid]
      }
 
	    new Ext.Viewport({
						layout: 'fit',
						items: [
						 mainPanel
						],
		        renderTo: Ext.getBody()
		  });
		    
		  xtzystore.baseParams={Fun:'msaNewSearchList',showtype:'1',sdate:'[$seldate$]'};
      xtzystore.load({params:{Fun:'msaNewSearchList',showtype:'1',sdate:'[$seldate$]',start:0,limit:pagesize}});  
	
			myMask.hide();
			
            
   });	  
</script>


</head>
<body oncontextmenu="return false" style="SCROLLBAR-FACE-COLOR: #f0f0f0;  overflow-x:hidden;  OVERFLOW: scroll; SCROLLBAR-SHADOW-COLOR: #f0f0f0; SCROLLBAR-3DLIGHT-COLOR: #f0f0f0; SCROLLBAR-ARROW-COLOR: #f0f0f0; SCROLLBAR-DARKSHADOW-COLOR: #cccccc;" >

<DIV style="DISPLAY: none">
 
<DIV id=north>
	      
         <fieldset style="width:260;height:30;border:2px groove" align=center>
          <legend>标记对象</legend>
           <table width="100%"  border="0" cellspacing="0" cellpadding="0" >
            <tr> 
              <td  height="20">  
                <div align="left"> 
                 名称标记&nbsp;&nbsp;:
                 <input type="text"  title="搜索结果保存名称标记" class=inputf0  id="searchname"   name="searchname" size="25" maxlength="48" value=""  >
                </div>
              </td>
              </tr>                     
         </table>
        </fieldset>
        
        <br>
        <br>

         <fieldset style="width:260;height:30;border:2px groove" align=center>
          <legend>时间对象</legend>
         <table width="100%"  border="0"  cellspacing="0" cellpadding="0" >
         	  <tr>
			          <td>
			            <div align="left"> 开始日期&nbsp;&nbsp;: 
			            	 <input type="text"  class=inputf0 name="seldate"  id="seldate" size="20" value="" readonly onClick=setday(seldate)>            
			          	</div>             	
			          </td>
       		  </tr>       		 
       		  <tr>
			          <td>
			            <div align="left"> 结束日期&nbsp;&nbsp;: 
			            	 <input type="text"  class=inputf0 name="seltime"  id="seltime" size="20" value="" readonly onClick=setday(seltime)>          
			          	</div>             	
			          </td>
       		  </tr>
         </table>
         </fieldset>
         
          <br>
          <br>
         
          <fieldset style="width:260;height:30;border:2px groove" align=center>
          <legend>部门对象</legend>  
          <table width="100%" border="0" cellspacing="0" cellpadding="0" >      
              <tr>
               <td  height="20"> 
              	<div align="left"> 
                 选择部门&nbsp;&nbsp;:
                  <input type="text" class=inputf0  id="group"  name="group" size="25" maxlength="48" value=""  style="cursor:hand;background-image:url(/msa/images/drop-yes2.gif);background-position:right bottom; background-repeat: repeat-y">
                </div>
              </td>
            </tr>
          
          </table>
          </fieldset>
            
            <br>
        	  <br> 
               
            <fieldset style="width:260;height:30;border:2px groove" align=center>
              <legend>过滤对象</legend>  
              <table width="100%" border="0" cellspacing="0" cellpadding="0" >       
               
              <tr> 
              <td  height="20">              
                <div align="left"> 
                 关&nbsp;键&nbsp;&nbsp;字&nbsp;&nbsp;:
                 <input type="text" class=inputf0  id="searchconX"   name="searchconX" size="25" maxlength="48" value=""  >              
                </div>
              </td>
              </tr> 
               
               
              <tr> 
               <td  height="20">         
                <div align="left"> 
                 源IP地址&nbsp;&nbsp;:
                 <input type="text" class=inputf0  id="sip"  name="sip" size="16" maxlength="15" value=""  >							 
                </div>
              </td>
              </tr> 
              
             <tr> 
               <td  height="20">         
                <div align="left">               
								 目的地址&nbsp;&nbsp;:
                 <input type="text" class=inputf0  id="dip"  name="dip" size="16" maxlength="15" value=""  >
                </div>
              </td>
              </tr> 
              
              <tr> 
              <td  height="20">                
                <div align="left"> 
                 目的端口&nbsp;&nbsp;:
                 <input type="text" class=inputf0  id="dport"  name="dport" size="10" maxlength="5" value=""  >
                </div>
              </td>
              </tr> 
              
              
              
              <tr> 
               <td  height="20">         
                <div align="left">               
								 选择服务&nbsp;&nbsp;:
                  <input type="text" class=inputf0  id="servicetree"  name="servicetree" size="25" maxlength="48" value=""  style="cursor:hand;background-image:url(/msa/images/drop-yes2.gif);background-position:right bottom; background-repeat: repeat-y">
                </div>
              </td>
              </tr> 
             
              
              <tr> 
              <td  height="20">                
                <div align="left"> 
                 虚拟通道&nbsp;&nbsp;:
                  <SELECT class=inputsel name=vpath> 
                    <OPTION selected value='-1' >所有通道</OPTION> 
                    [$begintable vpathlist$] 
                    <OPTION value='[$vpathid$]'>[$vpathname$]</OPTION> 
                    [$endtable$]
                  </SELECT>               
                </div>
              </td>
              </tr> 
              

              
              </table>
              </fieldset>
           
</div>
</div>
</body>
</html>
 
 