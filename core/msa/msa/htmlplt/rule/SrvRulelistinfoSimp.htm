<HTML><HEAD><TITLE>网络7层管理和过滤的领导者</TITLE>
<META content="text/html; charset=utf-8" http-equiv=Content-Type>
<LINK rel=stylesheet type=text/css href="/ext/resources/css/ext-all.css">
<LINK rel=stylesheet type=text/css href="/ext/resources/css/xtheme-default.css">
<SCRIPT type=text/javascript src="/ext/adapter/ext/ext-base.js"></SCRIPT>
<SCRIPT type=text/javascript  src="/ext/ext-all.js"></SCRIPT>
<SCRIPT type=text/javascript  src="/msa/publicjs/pubstyle.js"></SCRIPT>
<link rel="stylesheet" type="text/css" href="/msa/publiccss/pubcss.css">
<link rel="stylesheet" href="/msa/publiccss/css.css" type="text/css">
<link href="/Content/IconCls.css" rel="stylesheet" type="text/css" />
<script type=text/javascript  src="/msa/publicjs/exportexcel.js"></script>
<SCRIPT type=text/javascript>
		var addwin;
		var curPageNum=1;
		var pagesize=100;
		var start=0;
		function delusers(nodeid){
              Ext.Ajax.request({
			          method : 'POST',
			          url:'/msa/main.xp',
			          success: function(response, options){
			          },
			          failure : function(){
			          },
			        	params:{Fun:'addruleuser',ruleid:[$ruleid$],userid:nodeid,delflag:'delflag'}
							});
		}
		function addusers(nodeid){
              Ext.Ajax.request({
			          method : 'POST',
			          url:'/msa/main.xp',
			          success: function(response, options){
			          },
			          failure : function(){
			          },
			        	params:{Fun:'addruleuser',ruleid:[$ruleid$],userid:nodeid}
							});
		}
		function updateSrvRule(){
				if(userform.rulename.value==""){
					Ext.MessageBox.alert("提示","规则名称不能为空!");
					userform.rulename.focus();
					return;
				}
				Ext.Ajax.request({
          method : 'POST',
          url:'/msa/main.xp',
          success: function(response, options){
          	//Ext.MessageBox.alert("提示","修改成功!");
						parent.store.load();
						parent.addwin.close();
          },
          failure : function(){
          	Ext.MessageBox.alert("提示","修改失败!");
						parent.store.load();
          },
        	params:{Fun:'msaEditSrvRule',ruleid:[$ruleid$],ruleflag:userform.ruleflag.value,logaction:userform.logaction.value,conaction:userform.conaction.value,ruleschedule:userform.ruleschedule.value,rulejjr:document.getElementById('rulejjr').value,rulename:userform.rulename.value,ruleurl:userform.ruleurl.value,policy:userform.policy.value,group:userform.group.value}
				});
		}
		function upfn(val,table,type){
    	Ext.Ajax.request({
          method : 'POST',
          url:'/msa/main.xp',
          success: function(response, options){
          	if(response.responseText==0){
          		if(response.responseText==0){
          			Ext.Msg.alert('操作','修改成功');
          			xtzystore.load();
          		}
          	}
          },
          failure : function(){
          },
          params:{Fun:'msaUpPrio',ruleid:val,table:table,type:type,rruleid:[$ruleid$]}
			});
		}
		function downfn(val,table,type){
			Ext.Ajax.request({
          method : 'POST',
          url:'/msa/main.xp',
          success: function(response, options){
          	if(response.responseText==0){
          		if(response.responseText==0){
          			Ext.Msg.alert('操作','修改成功');
          			xtzystore.load();
          		}
          	}
          },
          failure : function(){
          },
          params:{Fun:'msaDownPrio',ruleid:val,table:table,type:type,rruleid:[$ruleid$]}
			});
		}
    Ext.BLANK_IMAGE_URL = '/msa/extjs/resources/images/default/s.gif';
    Ext.onReady(function(){
	  		Ext.QuickTips.init();
				var detailEl;
				var groupid=0;
				var xtzygrid;
				var twoServiceTree;
				var myMask = new Ext.LoadMask(Ext.getBody(),{
				        	msg:"Please wait..."
				});
				myMask.show();
		//用户
		var usertree;
		var maxPageCount;
				//数据加载
		function log_search(){
				getMaxSize();
				usertree.root.attributes.children = false;
				//Read4();    //加载滚动条代码，不是本文重点，可以不关注
				usertree.root.reload();
				usertree.root.collapse(true, true);
		}
		function getMaxSize(){
				Ext.Ajax.request({
						method : 'POST',
						url:'/msa/main.xp',
						success : function(response){
							treedata = response.responseText;
							//realCount = Ext.decode(treedata).totalCount;
							// alert(realCount);
							maxPageCount = Math.ceil(treedata/pagesize);
							lb_num.setText(maxPageCount);
							},
							failure : function(){
							Ext.Msg.alert("提示", "连接数据库错误或连接超时！");
						},
						params:{Fun:'ruleGroupUserlist',countflag:'contflag',groupid:groupid}
				});
		}
		getMaxSize();
				//自定义工具条
		var bt_first = new Ext.Toolbar.Button({
				tooltip : "第一页",
				overflowText : "第一页",
				iconCls : 'x-tbar-page-first',
				disabled : false,
				enable : true,
				handler : do_first
		});
		var bt_prev = new Ext.Toolbar.Button({
				tooltip : "前一页",
				overflowText : "前一页",
				iconCls : 'x-tbar-page-prev',
				disabled : false,
				enable : true,
				handler : do_prev
		});
		var bt_number = new Ext.form.NumberField({
				cls : 'x-tbar-page-number',
				allowDecimals : false,
				allowNegative : false,
				enableKeyEvents : true,
				selectOnFocus : true,
				submitValue : false,
				listeners : {
				change : onPagingKeyDown
				}
		});
		bt_number.setValue(curPageNum);

		var pglimit = new Ext.form.NumberField({
				cls : 'x-tbar-page-number',
				allowDecimals : false,
				allowNegative : false,
				enableKeyEvents : true,
				selectOnFocus : true,
				submitValue : false,
				enableKeyEvents: true,
				listeners : {
				change: onPagingKeyDown1
				}
		});
		pglimit.setValue(pagesize);
		var bt_next = new Ext.Toolbar.Button({
				tooltip : "下一页",
				overflowText : "下一页",
				iconCls : 'x-tbar-page-next',
				disabled : false,
				enable : true,
				handler : do_next
		});
		var bt_last = new Ext.Toolbar.Button({
				tooltip : "最后页",
				overflowText : "最后页",
				iconCls : 'x-tbar-page-last',
				disabled : false,
				enable : true,
				handler : do_last
		});
		var bt_refresh = new Ext.Toolbar.Button({
				tooltip : "刷新",
				overflowText : "刷新",
				iconCls : 'x-tbar-loading',
				disabled : false,
				enable : true,
				handler : do_refresh
		});

		var lb_num = new Ext.form.Label({
				text : '0'
		});

		function do_first(){
				start = 0;
				curPageNum = 1;
				bt_number.setValue(curPageNum);
				log_search();
		}

		function do_next() {
				start =parseInt(start)+parseInt(pagesize);
				curPageNum = parseInt(curPageNum) + 1;
				bt_number.setValue(curPageNum);
				log_search();
		}


		function do_last() {
				start = (maxPageCount - 1) * pagesize;
				log_search();
				curPageNum = maxPageCount;
				bt_number.setValue(curPageNum);
		}
		function do_prev(){
				if(start==0){
					return;
				}
				start =parseInt(start)-parseInt(pagesize);
				if(start<0){
					start=0;
				}
				curPageNum = parseInt(curPageNum)-1;
				if(curPageNum<0)curPageNum=0;
				bt_number.setValue(curPageNum);
				log_search();
		}
		function onPagingKeyDown(txtfield, e){
				if(parseInt(txtfield.value)>0){
					start=parseInt(pagesize)*(parseInt(txtfield.value)-1)
				}
				if(parseInt(txtfield.value)>parseInt(maxPageCount)){
					start=parseInt(pagesize)*(parseInt(maxPageCount)-1)
				}
				log_search();
		}
		function onPagingKeyDown1(txtfield, e){
				pagesize=txtfield.value;
				start = (parseInt(bt_number.getValue()) - 1) * pagesize;
				log_search();
		}
		function do_refresh() {
				log_search();
		}
		var m_toolbar = new Ext.Toolbar({
		items : [ bt_first, bt_prev,'-','每页',pglimit,'条','-',bt_next, bt_last, bt_refresh,'-','第', bt_number, '页', '共', lb_num,
		'页', '-','->',
		{
		             	xtype : 'button',
		            	tooltip:{text:'选择所有用户'},
		            	text:'全选',
		            	//iconCls:'connect',
		            	handler:function(){
		            		Ext.MessageBox.confirm('Confirm', '您确认要选择并配置所有用户?', confirmdelclient);
                    function confirmdelclient(btn){
											        if(btn=='yes'){
												        	var rootNode = Ext.getCmp('usertree').getRootNode();
			            								treeCheckTrue(rootNode);
											        }
									 	};
		}},'-',{
		             	xtype : 'button',
		            	tooltip:{text:'取消选择'},
		            	text:'清空',
		            	//iconCls:'connect',
		            	handler:function(){
		            		Ext.MessageBox.confirm('Confirm', '您确认要删除配置所有用户?', confirmdelclient);
                    function confirmdelclient(btn){
											        if(btn=='yes'){
		            									var nodes = Ext.getCmp('usertree').getChecked();
			            								treeCheckfalse(nodes);
											        }
		};
		}}]
		});
		usertree= new Ext.tree.TreePanel({
				id:'usertree',
        layout:'fit',
				height:435,
        useArrows:true,
        autoScroll:true,
        animate:true,
        rootVisible: false,
        root: {
            nodeType: 'async'
        },
        loader: new Ext.tree.TreeLoader({
						dataUrl:'/msa/main.xp',
						baseParams:{Fun:'ruleGroupUserlist'}
				}),
				tbar:m_toolbar,
//				tbar: [{
//		             	xtype : 'button',
//		            	tooltip:{text:'选择所有用户'},
//		            	text:'全选',
//		            	//iconCls:'connect',
//		            	handler:function(){
//		            		Ext.MessageBox.confirm('Confirm', '您确认要选择并配置所有用户?', confirmdelclient);
//                    function confirmdelclient(btn){
//											        if(btn=='yes'){
//												        	var rootNode = Ext.getCmp('usertree').getRootNode();
//			            								treeCheckTrue(rootNode);
//											        }
//									 	};
//		            }},'-',{
//		             	xtype : 'button',
//		            	tooltip:{text:'取消选择'},
//		            	text:'清空',
//		            	//iconCls:'connect',
//		            	handler:function(){
//		            		Ext.MessageBox.confirm('Confirm', '您确认要删除配置所有用户?', confirmdelclient);
//                    function confirmdelclient(btn){
//											        if(btn=='yes'){
//		            									var nodes = Ext.getCmp('usertree').getChecked();
//			            								treeCheckfalse(nodes);
//											        }
//									 	};
//
//		            }}
//				],
				listeners: {"checkchange": function(node, checked) {
									if(checked){
										addusers(node.id);
									}else {
										delusers(node.id);
									}
				}}
		});
		usertree.loader.on("beforeload", function(loader, node) {
	              if (start <= 0)
								start = 0;
								if (pagesize <= 0)
								pagesize = 50;
								Ext.apply(this.baseParams, {
										start : start,
										limit : pagesize,
										ruleid:[$ruleid$],
										groupid:groupid
								});
	  });
		//部门
		var grouptree=new Ext.tree.TreePanel({
									    	  id: 'gtree-panel',
									        layout:'fit',
									        split: true,
									        height:435,
									        useArrows:true,
									        autoScroll: true,
									        rootVisible: false,
									        tbar:[new Ext.form.TextField({ width: 200,
									   					emptyText:'search',
													    listeners:{
													       render: function(f){
													         f.el.on('keydown', filterTree, f, {buffer: 350});
									      				 }
									            }
									      	})],
									        lines: false,
									        loader: new Ext.tree.TreeLoader({
									        	  dataUrl:'/msa/main.xp',
															baseParams:{Fun:'msaGroupTreeView'}
									        }),
									        root: new Ext.tree.AsyncTreeNode(),
									        listeners:{
									        click: function(node, e) {
											    					groupid=node.id;
											    					log_search();
														 		    //usertree.getLoader().load(usertree.root);
														 		    usertree.root.reload();
											    }
        									}
		});
		var groupchecktree = new Ext.tree.TreePanel({
				id:'groupchecktree',
        layout:'fit',
        height:435,
        useArrows:true,
        autoScroll:true,
        animate:true,
        rootVisible: false,
        root: {
            nodeType: 'async'
        },
        tbar : [{
             	xtype : 'button',
            	tooltip:{text:'<b>选择所有部门</b>'},
            	text:'全选',
            	//iconCls:'connect',
            	handler:function(){
            		var rootNode = Ext.getCmp('groupchecktree').getRootNode();
            		treeCheckTrue(rootNode);
            }},'-',{
             	xtype : 'button',
            	tooltip:{text:'<b>取消选择</b>'},
            	text:'清空',
            	//iconCls:'connect',
            	handler:function(){
            		var nodes = Ext.getCmp('groupchecktree').getChecked();
				        treeCheckfalse(nodes);
            }}
				],
        loader: new Ext.tree.TreeLoader({
						dataUrl:'/msa/main.xp',
						baseParams:{Fun:'msaGroupToPageTreeView'}
				}),
				listeners: {"checkchange": function(node, checked) {
							   	groupmanager=document.getElementById('group').value;
									if(checked){
			                    if(node.id=='0'){
			                      groupmanager = '1' + groupmanager.substring(Number(node.id)+1);
			                    }else if(node.id=='999'){
			                      groupmanager = groupmanager.substring(0,Number(node.id)) +  '1';
			                    }else{
			                      groupmanager = groupmanager.substring(0,Number(node.id)) +  '1' + groupmanager.substring(Number(node.id)+1,1000);
			                    }
													document.getElementById('group').value=groupmanager;
									}else {
			                    if(node.id=='0'){
			                      groupmanager = '0' + groupmanager.substring(Number(node.id)+1);
			                    }else if(node.id=='999'){
			                      groupmanager = groupmanager.substring(0,Number(node.id)) +  '0';
			                    }else{
			                      groupmanager = groupmanager.substring(0,Number(node.id)) +  '0' + groupmanager.substring(Number(node.id)+1,1000);
			                    }
													document.getElementById('group').value=groupmanager;
									}
				}
				}
    });
    groupchecktree.loader.on("beforeload", function(loader, node) {
	              loader.baseParams.mygid = document.getElementById('group').value;
	  });

	  var hiddenPkgs = [];
	  function filterTree(e){
	   			var text = e.target.value;
	        Ext.each(hiddenPkgs, function(n){
	             n.ui.show();
	        });

	         if(!text){
	             filter.clear();
	             return;
	         }
	         grouptree.expandAll();
	         var re = new RegExp(Ext.escapeRe(text), 'i');
	         filter.filterBy(function(n){
	         		var textval = n.text;
	            return !n.isLeaf() || re.test(n.text);
	         });
	        // hide empty packages that weren't filtered
	         hiddenPkgs = [];
	         grouptree.root.cascade(function(n) {
	             if(!n.isLeaf()&& n.ui.ctNode.offsetHeight<3){
	                 n.ui.hide();
	                 hiddenPkgs.push(n);
	             }
	         });

	  }
	  var filter = new Ext.tree.TreeFilter(grouptree, {
			   clearBlank: true,
			   autoClear: true
	  });
		/**
		 *checkTree全选
		 */
		var treeCheckTrue = function(node)
		{
		    node.eachChild(function (child) {
		        child.getUI().toggleCheck(true);
		        child.attributes.checked = true;
		        treeCheckTrue(child);
		    });
		}
		/**
		 *checkTree清空
		 */
		var treeCheckfalse = function(nodes)
		{
		    if(nodes && nodes.length){
		     for(var i=0;i<nodes.length;i++){
		      //设置UI状态为未选中状态
		      nodes[i].getUI().toggleCheck(false);
		      //设置节点属性为未选中状态
		      nodes[i].attributes.checked=false;
		     }
		    }
		}
	  var policytree=new Ext.tree.TreePanel({
				height:435,
				id:'policytree',
				split: true,
				useArrows:true,
				tbar : [{
	             	xtype : 'button',
	            	tooltip:{text:'<b>选择所有服务</b>'},
	            	text:'全选',
	            	//iconCls:'connect',
	            	handler:function(){
	            		var rootNode = Ext.getCmp('policytree').getRootNode();
	            		treeCheckTrue(rootNode);
	            	}},'-',{
	             	xtype : 'button',
	            	tooltip:{text:'<b>取消选择</b>'},
	            	text:'清空',
	            	//iconCls:'connect',
	            	handler:function(){
	            		var nodes = Ext.getCmp('policytree').getChecked();
					        if (nodes && nodes.length) {
					            for (var i = 0; i < nodes.length; i++) {
					                //设置UI状态为未选中状态
					                nodes[i].getUI().toggleCheck(false);
					                //设置节点属性为未选中状态
					                nodes[i].attributes.checked = false;
					            }
					        }
	            }}
				],
				autoScroll: true,
				rootVisible: false,
				lines: false,
				listeners: {"checkchange": function(node, checked) {
							   	poliymanager=document.getElementById('policy').value;
									if(checked){
													if(node.id=='0'){
			                      poliymanager = '1' + poliymanager.substring(Number(node.id)+1);
			                    }else if(node.id=='127'){
			                      poliymanager = poliymanager.substring(0,Number(node.id)) +  '1';
			                    }else{
			                      poliymanager = poliymanager.substring(0,Number(node.id)) +  '1' + poliymanager.substring(Number(node.id)+1,127);
			                    }
													document.getElementById('policy').value=poliymanager;
									}else {
													if(node.id=='0'){
			                      poliymanager = '0' + poliymanager.substring(Number(node.id)+1);
			                    }else if(node.id=='127'){
			                      poliymanager = poliymanager.substring(0,Number(node.id)) +  '0';
			                    }else{
			                      poliymanager = poliymanager.substring(0,Number(node.id)) +  '0' + poliymanager.substring(Number(node.id)+1,127);
			                    }
													document.getElementById('policy').value=poliymanager;
									}
									//alert(document.getElementById('policy').value);
				}
				},
				useArrows: true,
				root: {
		            nodeType: 'async'
		    },
		    loader: new Ext.tree.TreeLoader({
						dataUrl:'/msa/main.xp',
						baseParams:{Fun:'msaPolicyToPageTree',policyid:document.getElementById('policy').value}
				})
		});
    var actionPanel = new Ext.Panel({
        region:'north',
        split:true,
        collapsible: false,
        collapseMode: 'mini',
        layout:'fit',
        height:120,
        frame:true,
        minWidth: 150,
        border: false,
        //baseCls:'x-plain',
        contentEl:'mainviewdiv'
    });
		xtzystore = new Ext.data.JsonStore({
        root: 'Results',
        totalProperty: 'totalCount',
        url:'/msa/main.xp',
        baseParams:{Fun:'msaSrvRulesrvList',ruleid:[$ruleid$]},
        fields: [
        	 {name: 'sid'},
           {name: 'sname'},
           {name: 'ruleaction'},
           {name: 'orderNum'},
           {name: 'qosname'},
           {name: 'tablename'}
        ]
    });
    xtzystore.load();
    function ruleaction(val){
	    if(val == 0){
	       return '拒绝访问';
	    }else{
		     return '允许访问';
		  }
    }
    function moveup(val, meta, record){
			//id 表名 类型
			var table="'"+record.data.tablename+"'";
			var type=3;
			return String.format(
　		'&nbsp&nbsp&nbsp&nbsp<input id="up" type=image src="./images/uparrow.png" onclick="upfn('+val+','+table+','+type+')" />&nbsp<input id="down" type=image src="./images/downarrow.png"" onclick="downfn('+val+','+table+','+type+')"/>'
			);
    }
    xtzygrid = new Ext.grid.GridPanel({
        layout: 'fit',
        store: xtzystore,
        columns: [
            {header: "规则名称",width: 40,sortable: true, dataIndex: 'sname'},
            {header: "动作",width: 20,sortable: true,dataIndex: 'ruleaction',renderer: ruleaction}
        ],
        viewConfig: {forceFit:true},
        stripeRows: true,
        //autoWidth : true,
        height:screen.height-200,
        //frame:true,
		    collapsible:false,
		    loadMask:{msg:'正在加载数据，请稍侯……'},
		    draggable:false
    });
    var rightClick  = new Ext.menu.Menu({
                id:'feeds-ctx',
                items: [{
                    id:'editclient',
                    iconCls:'load-icon',
                    text:'编辑规则服务',
                    scope: this,
                    handler:function(){
                        var record = xtzygrid.getStore().getAt(detailEl);
                        var sid=record.get("sid");
                        addwin =new  Ext.Window(
							          {
			                    id: 'east-panel',
			                    title: '编辑规则服务',
			                    height: 550,
			                    width: 700,
			                    closeAction: 'close',
			                    modal: 'true',
		          						frame:true,
			                    maximizable:'true',
			                    margins:'0 5 0 0',
			                    html: "<IFRAME  name='menufrm' width=100% height=100% SRC = '/msa/main.xp?Fun=showEditRuleSrv&ruleid=[$ruleid$]&sid="+sid+"'></iframe>"
							          });
							          addwin.show();
							          addwin.maximize();
                    }
                	}
    ]});
    xtzygrid.addListener('rowcontextmenu', rightClickFn);
		  function rightClickFn(client, rowIndex, e) {
					                rightClick.showAt(e.getXY());
					                detailEl= rowIndex;
		}
    var tabPanel = new Ext.TabPanel({
        region:'center',
        deferredRender:false,
        autoScroll: true,
        margins:'0 4 4 0',
        activeTab:0,
        bbar:['->',
							{icon: '/msa/images/saving.gif',
							enableToggle:true,
							cls: 'x-btn-text-icon details',
            	tooltip:{text:'<b>保存规则</b>'},
            	text:'完成',
            	//iconCls:'connect',
            	handler:function(){
            		updateSrvRule();
            }}
				],
        items:[{
            id:'tab1',
            title: '对应以下服务策略',
            closable:false,
            autoScroll:false,
						items:[xtzygrid]
        },{
            id:'tab6',
            title: '对应以下部门',
            closable:false,
            autoScroll:true,
        		items:[groupchecktree]
        }]
    });
    viewport = new Ext.Viewport({
           layout:'border',
           items:[actionPanel,tabPanel]});
		myMask.hide();
});
	</SCRIPT>
</HEAD>
<body oncontextmenu="return false" topmargin=0 leftmargin=0 style="SCROLLBAR-FACE-COLOR: #f0f0f0;  overflow-x:hidden;  OVERFLOW: scroll; SCROLLBAR-SHADOW-COLOR: #f0f0f0; SCROLLBAR-3DLIGHT-COLOR: #f0f0f0; SCROLLBAR-ARROW-COLOR: #f0f0f0; SCROLLBAR-DARKSHADOW-COLOR: #cccccc;" >
	<div id="mainviewdiv" valign="top" align="center" STYLE="position:absolute; left=10; z-index:1; top: 2;">
	<table width="100%" height=70% cellpadding=0 cellspacing=0 Border=0>
		<form name="userform" method="POST" action="/main/main.xp">
			<input type="hidden" id="group" name="group" value="[$group$]">
			<input type="hidden" id="policy" name="policy" value="[$policy$]">
			<input type="hidden" class="inputself0" id="conaction" value="1">
			<input type="hidden" class="inputself0" id="logaction" value="1">
			<input type="hidden" name="rulejjr" class="inputself0" id="rulejjr" value="0">
			<input type='hidden'  class="input"   name="ruleurl" value="" >
			<!-- generic wizard buttons -->
			<tr>
				<td colspan=4 align="left">
					<TABLE CELLPADDING = 3 CELLSPACING=0 >
						<tr>
							<td><span class="STYLE1">编辑访问规则</span></td>
						</tr>
						<TR>
							<TD width="238" VALIGN='middle'><FONT FACE='宋体' >名称： </font></TD>
							<TD width="272" VALIGN='middle'>
								<INPUT TYPE='text'  class="input"   NAME="rulename" VALUE="[$rulename$]">
							</TD>
							<TD width="171"><font face='宋体' >启用： </font></TD>
							<TD width="482">
								<select name="ruleflag" class="inputself0" id="ruleflag">
									<option value="0">不启用</option>
									<option value="1" [$ruleflag1$]>启用</option>
								</select>
							</TD>
						<TR>
							<TD>规则应用的时间：</TD>
							<TD>
								<select name="ruleschedule" class="inputself0" id="ruleschedule">
									[$begintable schlist$]
									<option value="[$schid$]" [$schsel$]>[$schname$]</option>
									[$endtable$]
								</select>
							</TD>
						</TR>
</form></table>
</div>
</BODY>
</HTML>
