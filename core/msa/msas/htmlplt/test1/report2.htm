<html class="x-viewport">
    
    <head>
        <title>
            网络7层管理和过滤的领导者
        </title>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <link rel="stylesheet" type="text/css" href="/msas/extjs/resources/css/ext-all.css">
        <link rel="stylesheet" type="text/css" href="/msas/extjs/resources/css/feed-viewer.css">
        <link rel="stylesheet" type="text/css" href="/msas/publiccss/pubcss.css">
        <link rel="stylesheet" type="text/css" href="/msas/extjs/resources/css/xtheme-default.css">
        <script type="text/javascript" src="/msas/extjs/adapter/ext/ext-base.js">
        <script language="Javascript" src="/msas/publicjs/select_time.js"></script>
        <script type="text/javascript" src="/msas/extjs/ext-all.js"></script>
        <link rel="stylesheet" href="/msas/publiccss/pubcss.css" type="text/css">
        <link rel="stylesheet" href="/msas/publiccss/css.css" type="text/css">
        <script type=text/javascript  src="/msas/publicjs/select_time_st.js"></script>
        <SCRIPT type=text/javascript src="/msas/publicjs/exportexcel.js"></SCRIPT>
        <style type="text/css">
            HTML { BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN:
            0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 12px verdana; HEIGHT:
            100%; OVERFLOW: hidden; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP:
            0px } BODY { BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px;
            MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 12px verdana;
            HEIGHT: 100%; OVERFLOW: hidden; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP:
            0px } P { MARGIN: 5px } .settings { BACKGROUND-IMAGE: url(/msas/extjs/shared/icons/fam/folder_wrench.png)
            } .nav { BACKGROUND-IMAGE: url(/msas/extjs/shared/icons/fam/folder_go.png)
            }
        </style>
        <script type="text/javascript" charset="utf-8">
            Ext.BLANK_IMAGE_URL = '/msas/htmlplt/extjs/resources/images/default/s.gif';
            var xtzystore;
            var pagesize;
            pagesize = 100;
            
          //定义报告生成函数     
            function Generate() {
                var stopflag;
                var myseldate,myreport//搜索名字（报告名称）
                myreport=reportname.value;
                if (myreport=="") {
                    Ext.MessageBox.alert('提示', '必须填写报告名称！');
                    return;
                }
                
                stopflag = 0;

                Ext.MessageBox.show({
                    msg: '报告生成中，这需要一段时间，您可以继续等待或者稍后察看结果',
                    progressText: 'waitting...',
                    width: 300,
                    wait: true,
                    waitConfig: {
                        interval: 500
                    },
                    icon: 'ext-mb-download'
                });

                setTimeout(function() {
                    if (stopflag == 0) {
                        Ext.MessageBox.hide();
                        xtzystore.load();
                    }
                    stopflag = 1;
                },
                20000);

                Ext.Ajax.request({
                    method: 'POST',
                    url: '/msas/main1/main.xp',
                    success: function(response, options) {
                    	var retxt=response.responseText;
                      if(retxt!="" ){
                           Ext.MessageBox.hide();
                           xtzystore.load();
                      }else{
                       setTimeout();
                      }
                      /*
                        if (stopflag == 0) {
                            Ext.MessageBox.hide();
                            xtzystore.load();//数据载入刷新
                        }
                        stopflag = 1;*/
                    },
                    failure: function() {
                        Ext.MessageBox.hide();
                        Ext.MessageBox.alert('提示', '生成报告失败！');
                    },
                    params: {
                        Fun: 'msasreportproc2',                       
                        reportname:reportname.value,
 					              ptype:ptype.value,
 					              sdate:sdate.value,
 					              edate:edate.value, 												
 												email:email.value,
												showtype:2                
                    }
                });
            }
            
            
            function myexport() {
                var stopflag;
                var myseldate,myreportname,fileproc;
                myseldate = seldate.value;//seldate,reportname,otype是HTML元素的ID号
                myreportname = reportname.value;
                var myurl = "/msas/main1/main.xp?Fun=msasreportproc&showtype=1&reportname=1&exportaction=1&seldate=" + myseldate + "&seltime=" + myseltime;
                downloadFile(myurl);
            }
           

            Ext.onReady(function() {
                Ext.QuickTips.init();
                var detailEl;
                //var win;
                var myMask = new Ext.LoadMask(Ext.getBody(), {
                    msg: "Please	wait..."
                });
                myMask.show();
                //定义表格数据存储器
                xtzystore = new Ext.data.JsonStore({
                    root: 'Results',
                    totalProperty: 'totalCount',
                    url: '/msas/main1/main.xp',
                    baseParams: {
                        Fun: 'msasReportList',
                        reporttype:'2'
                    },
                    fields: [{name: 'sname'},
                             {name: 'suser'},
                             {name: 'sysdate'},
                             {name: 'scon'},
                             {name: 'myurl'},
                             {name: 'stype'},
                             {name: 'fproc'}                          
                             ]
                });
                xtzystore.load({
                	params:{start:0,limit:20},
                	callback:function(records,options,success){/*Ext.Msg.alert('info','加载完毕');*/},
                	scope:xtzystore,
                	add:true
                	});

                //定义grid分页工具栏
                HlPagingToolbar = Ext.extend(Ext.PagingToolbar, {
                    displayInfo: true,
                    displayMsg: '显示第	{0}	条到 {1} 条记录，共	{2}	条',
                    emptyMsg: "无记录",
                    initComponent: function() {
                        var pageSizeItems = ['-', '每页', this.inputItem = new Ext.form.NumberField({
                            cls: 'x-tbar-page-number',
                            allowDecimals: false,
                            allowNegative: false,
                            enableKeyEvents: true,
                            maxValue: 500,
                            maxText: '每页不允许超过500条',
                            selectOnFocus: true,
                            value: this.pageSize,
                            submitValue: false,
                            listeners: {
                                scope: this,
                                keydown: this.onHlPagingKeyDown,
                                blur: this.onHlPagingBlur
                            }
                        }), '条', '-', {
                            pressed: true,
                            icon: '/msas/images/grid.png',
                            enableToggle: true,
                            text: '导出本页数据到Excel',
                            cls: 'x-btn-text-icon	details',
                            toggleHandler: function(btn, pressed) {
                                downloadViewDataActive(xtzygrid);
                            }
                        },
                        '-'];
                        var userItems = this.items || [];
                        this.items = userItems.concat(pageSizeItems);
                        HlPagingToolbar.superclass.initComponent.call(this);
                    },

                    onHlPagingKeyDown: function(field, e) {
                        if (field.isValid()) {
                            var k = e.getKey();
                            if (k == e.RETURN) {
                                e.stopEvent();
                                this.pageSize = field.getValue();
                                pagesize = this.pageSize;
                                //alert(this.pageSize);
                                this.doRefresh();
                            }
                        }
                    },

                    onHlPagingBlur: function(field) {
                        if (field.isValid()) {
                            this.pageSize = field.getValue();
                            pagesize = this.pageSize;
                            this.doRefresh();
                        }
                    }
                });

                var pagingBar = new HlPagingToolbar({
                    store: xtzystore,
                    pageSize: pagesize,
                    displayInfo: true
                });

                //数据表格显示区域
                var xtzygrid = new Ext.grid.GridPanel({
                    store: xtzystore,//数据存储器
                    bbar: new Ext.StatusBar({
                        id: 'centerstatus',
                        defaultText: 'Ready',
                        defaultIconCls: 'default-icon',
                        iconCls: 'ready-icon'
                    }),
                    columns: [ 
            {id:'sname',header: "报表名称", width: 250, sortable: true, dataIndex: 'sname'},
            {header: "生成条件",  width: 250, sortable: true,  dataIndex: 'scon'},
            {header: "生成时间",  width: 250, sortable: true,  dataIndex: 'sysdate'},         
            {header: "状态",   width:250, sortable: true,  dataIndex: 'fproc'}],
                    tbar: pagingBar,
                    stripeRows: true,
                    autoExpandColumn: 'sname',
                    height: screen.height - 210,
                    title: '已生成场所报警统计报表列表',
                    frame: true,
                    collapsible: true,
                    loadMask: {
                        msg: '正在加载数据，请稍侯……'
                    },
                    draggable: true
                });

                 //定义表格记录删除规则函数
                function showsysdelrule(btn) {
                    if (btn == 'yes') {
                        var record = xtzygrid.getStore().getAt(detailEl);
                        xtzystore.remove(record);
                        var myurl = record.get("myurl");
                        //刷新数据
                        xtzystore.load({
                            params: {
                                Fun: 'msasReportList',
                                showtype: '2',
                                delfile: myurl
                            }
                        });
                    }
                };

                var rightClick = new Ext.menu.Menu({
                    id: 'feeds-ctx',
                    items: [{
                        id: 'shanchubaogao',
                        iconCls: 'load-icon',
                        text: '删除此报表',
                        scope: this,
                        handler: function() {
                            Ext.MessageBox.confirm('Confirm', '您确认要删除吗?', showsysdelrule);
                        }
                    },
                    //查看
                      {
                        id: 'chakan',
                        iconCls: 'load-icon',
                        text: '查看此报表',
                        scope: this,
                        handler: function(){
                            var record = xtzygrid.getStore().getAt(detailEl);
                            var myid = record.get("mytime");
                            var myfile = record.get("myurl");
                            var type = record.get("type");
                            if (type == 'form' || type == 'mail') {
                               var usrl = "/backlist/Search/" + myid + "/" + myfile;
                            } else {
                               var usrl="/msadatacenter/report/2/"+myfile+"/"+"index.htm";
                            }
                            
                            var mywin = new Ext.Window({
                                id: 'east-panels',
                                title: '报表详情',
                                height: 450,
                                width: 400,
                                closeAction: 'close',
                                modal: 'true',
                                maximizable: 'true',
                                margins: '0	5	0	0',
                                html: "<IFRAME	name='menufrm' width=100%	height='100%' SRC='" + usrl + "' border='0'	frameborder='0'	scrolling='yes'	></iframe>"
                            });
                            mywin.show();
                            mywin.maximize();
                            }
                      },
                     //下载
                     {
                        id: 'xiazai',
                        iconCls: 'load-icon',
                        text: '下载此报表',
                        scope: this,
                        handler: function() {
                            var record = xtzygrid.getStore().getAt(detailEl);
                            var myfile = record.get("myurl");
                            myurl = "/msas/main1/main.xp?Fun=nasBackListDownLoad+downLoadFile=ipsearch/" + myfile + "/search.csv";
                            alert(myurl);
                            downloadFile(myurl);
                        }
                     }]        
                });
                
                //给表格添加监听器
                xtzygrid.addListener('rowclick', rightClickFn);//rowclick为事件名，rightClickFn为监听到事件后执行的函数
                //函数定义
                function rightClickFn(client, rowIndex, e) {//e为元素对象
                    detailEl = rowIndex;
                    var record = xtzygrid.getStore().getAt(detailEl);//获取记录
                    var type = record.get("type");//
                    if (type == 'form' || type == 'mail') {
                        rightClickS.showAt(e.getXY());//获得事件发生的坐标位置
                    } else {
                        rightClick.showAt(e.getXY());
                    }
                }

                var northPanelTop = new Ext.Panel({
                    frame: true,
                    region: 'north',
                    title: '场所报警统计报表生成条件选择',
                    collapsible: true,
                    contentEl: 'north'
                });

                var mainPanel = {
                    id: 'main-panel',
                    region: 'center',
                    collapsible: true,
                    split: true,
                    width: 135,
                    minSize: 125,
                    maxSize: 400,
                    layout: 'fit',
                    margins: '0 5 0 0',
                    items: [xtzygrid]
                }

                new Ext.Viewport({
                    layout: 'border',
                    items: [northPanelTop, mainPanel],
                    renderTo: Ext.getBody()
                });
                myMask.hide();
            });
        </script>
    </head>
    
    <body id="ext-gen9" class="ext-gecko ext-gecko3 x-border-layout-ct" >
<DIV style="DISPLAY: none">
<DIV id=north>
        <input type="hidden" class=inputf0  id="stime" name="stime" maxlength="24" value="">
        <table width="100%" border="0" cellspacing="0" cellpadding="0" >
  <tr> 
    <td> 
         <table width="100%" border="0" cellpadding="0" cellspacing="0">
				<tr>
				    <td width="50">  &nbsp;</td>
				     <td>  &nbsp;</td>
				  </tr>
				<tr>
				     <td width="50">  &nbsp;</td>
				    <td>场所报警统计报表</td>
				  </tr>
        <table border="0" cellspacing="0" cellpadding="0"  align="left" valign="top" >
          <div id="plabel"  align="left"> 
            <tr valign="top" > 
              <td width="50" > 
                <div align="center">&nbsp;</div>
              </td>
              <td  height="20"  align="left" valign="top" > 
                <input type="hidden" name="Fun" value="msasreportproc2">
                <input type="hidden" id="ptype" name="ptype" values="0">
                选择日期:
                <input type="text" id="edate" class=inputf0 name="edate" size="20" maxlength="32" values="" onfocus=setday(edate) >
             </td>
             </tr>
             
             <tr valign="top" > 
              <td width="50" > 
                <div align="center">&nbsp;</div>
              </td>
              <td  height="20"  align="left" valign="top" > 
                <input type="hidden" name="Fun" value="msasreportproc1">
                <input type="hidden" id="ptype" name="ptype" values="0">
                结束日期:
                <input type="text" id="sdate" class=inputf0 name="sdate" size="20" maxlength="32" values="" onfocus=setday(sdate) >
             </td>
             </tr>       

           <tr> 
              <td width="50" height="20"> 
                <div align="center">&nbsp;</div>
              </td>
              <td  height="20"> 
                
                <div align="left"> 
                 报告名称:
                 <input type="text"  class=inputf0 id="reportname" name="reportname" size="20" maxlength="32" value=""  >
                </div>
              </td>
              </tr> 
              
          <tr> 
              <td width="50" height="20"> 
                <div align="center">&nbsp;</div>
              </td>
              <td  height="20"> 
                
                <div align="left"> 
                 邮件地址:
                <input type="text"  class=inputf0 name="email" size="20" maxlength="32" value=""  >  
				(填写邮件地址后生成的报告可自动发送到您的邮箱中！)
                </div>
              </td>
              </tr>     
              
            <tr> 
              <td height="50">&nbsp; </td>
              <td height="20">
                <input type="button"   class=inputf0 border="0" value="开始生成报告" onClick="Generate();" >  
              </td>
            </tr>
          </div>
        </table>
      
    </td>
  </tr>

</table>

 </div>

</div>
</body>
</html>