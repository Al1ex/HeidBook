<HTML><HEAD><TITLE>网络7层管理和过滤的领导者</TITLE>
<META content="text/html; charset=utf-8" http-equiv=Content-Type>
<LINK rel=stylesheet type=text/css href="/msas/extjs/resources/css/ext-all.css">
<link rel="stylesheet" type="text/css" href="/msas/extjs/resources/css/feed-viewer.css" />
<LINK rel=stylesheet type=text/css href="/msas/extjs/resources/css/xtheme-default.css" id="xthemecss" >
<script type="text/javascript" src="/msas/extjs/adapter/ext/ext-base.js"></script>
<SCRIPT type=text/javascript  src="/msas/extjs/ext-all.js"></SCRIPT>


<STYLE type=text/css>
HTML {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 12px verdana; HEIGHT: 100%; OVERFLOW: hidden; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px
}
BODY {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 12px verdana; HEIGHT: 100%; OVERFLOW: hidden; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px
}
P {
	MARGIN: 5px
}

</STYLE>


<SCRIPT type=text/javascript>
    
    //Ext.BLANK_IMAGE_URL = '/msas/extjs/resources/images/default/s.gif';
   
    var xtzystore;//
		var pagesize;//页面显示记录条数
		var havesearch;
		pagesize=100;
		havesearch=0;
    
    function gg(){//此函数用于
		    var myname,mytype,mycode;
		
			  myname=form1.User_name.value;
		    mytype=form1.Certificate_type.value;
		    mycode=form1.Certificate_code.value;
			  
			 xtzystore.load({params:{Fun:'mainTest', name:myname,ctype:mytype,Certificate_code:mycode,start:0,limit:pagesize}});
	     havesearch=1;
	 }
    
    Ext.onReady(function(){
	
						Ext.QuickTips.init();

						var detailEl;
						var mainViewEl;
						
						var myMask = new Ext.LoadMask(Ext.getBody(), 
						{
								        	msg:"Please wait..."
						});
									
						myMask.show();
            
						
						// This is the main content center region that will contain each example layout panel.
						// It will be implemented as a CardLayout since it will contain multiple panels with
						// only one being visible at any given time.
						var northPanel =new Ext.BoxComponent({
			                    region:'north',//布局的区域位置
			                    el: 'north',//该组件的Ext.Element元素对象。只读的。
			                    height:24
			      });
						
						var contentPanel = {
							id: 'content-panel',//唯一的组件id（默认为自动分配的id）。出于你打算用id来获取组件引用
							region: 'center', // this is what makes this panel into a region within the containing layout
							margins: '2 5 5 0',//margin 简写属性在一个声明中设置所有外边距属性。该属性可以有 1 到 4 个值。
							activeItem: 0,//组件id的字符串，或组件的索引，用于在容器布局渲染时候的设置为活动。
							border: false,//True表示为显示出面板body元素的边框，false则隐藏（缺省为true），默认下，边框是一套2px宽的内边框，但可在bodyBorder中进一步设置。
							el:'mainviewdiv'
						};
					    
						
						var alertPanelTree = new Ext.tree.TreePanel({
							/*TreePanel为树状的数据结构提供了树状结构UI表示层。
                TreeNodes是加入到TreePanel的节点，可采用其attributes属性 来定义程序的元数据
                TreePanel渲染之前必须有一个root根节点的对象。除了可以用root配置选项指定外，还可以使用setRootNode的方法。
               */
					    	  id: 'tree-alertpanel',
					        region:'north',
					        split: true,
					        height: screen.height-280,
					        minSize: 150,
					        autoScroll: true,
					        //true to use overflow:'auto' on the components layout element and show scroll bars automatically when necessary, false to clip any overflowing content (defaults to false).
					        rootVisible: false,
					        //
					        lines: false,
					        //
					        useArrows: true,
					        //
					        loader: new Ext.tree.TreeLoader({
					            dataUrl:'/msas/test1/rule-tree-data.json'
					        }),
					        //The URL from which to request a Json string which specifies an array of node definition objects representing the child nodes to be loaded.
					        root: new Ext.tree.AsyncTreeNode()
					        //
					   });

						
           // Assign the changeLayout function to be called on tree node click.
					  alertPanelTree.on('click', function(n){
					    	var sn = this.selModel.selNode || {}; // selNode is null on initial selection
					    	//if(n.leaf && n.id != sn.id){  // ignore clicks on folders and currently selected node 
								if(n.leaf){  // ignore clicks on folders and currently selected node 
								 
									xtzystore.load();//xtzystore？？？
                  
					    	}
					  });
					  
					  xtzystore = new Ext.data.JsonStore({//定义数据存储器
			        root: 'Results',//
			        totalProperty: 'totalCount',//总的属性
			        url:'/msas/test1/grid.json',
			      //If a proxy is not specified the url will be used to implicitly configure a HttpProxy if an url is specified. Typically this option, or the data option will be specified
							fields: [
					/*fields : Ext.util.MixedCollection 
           A MixedCollection containing the defined Fields for the Records stored in this Store. Read-only.
           */
										{name: 'Matching_id'},//匹配ID号
										{name: 'gnmkey'},//
										{name: 'sname'},//
										{name: 'Rule_id'},//
										{name: 'Rule_name'},//规则名
										{name: 'Matching_time'},
										{name: 'Net_ending_ip'},
										{name: 'Net_ending_code'},
										{name: 'Net_ending_mac'},
										{name: 'Destination_ip'},
										{name: 'Service_type'},
										{name: 'KeyWord1'},
										{name: 'KeyWord2'},
										{name: 'name'},
										{name: 'Certificate_type'},
										{name: 'ctypes'},
										{name: 'Certificate_code'},
										{name: 'Rule_type'},
										{name: 'Rule_types'},
										{name: 'contenturl'}
							]
			     });
			
			    xtzystore.load({params:{start:0,limit:pagesize}});
			    
			    HlPagingToolbar = Ext.extend(Ext.PagingToolbar, { 
    displayInfo: true, 
    displayMsg: '显示第 {0} 条到 {1} 条记录，共 {2} 条', 
    emptyMsg: "无记录", 
    initComponent : function(){ //初始化组建函数
        var pageSizeItems = [ //页面大小项目
                     '-','每页', 
                     this.inputItem = new Ext.form.NumberField({ //数字型文本域，提供自动键击过滤和数字校验。
									    cls: 'x-tbar-page-number', 
									    allowDecimals: false, 
									    allowNegative: false, 
									    enableKeyEvents: true, 
									    maxValue: 500, 
									    maxText: '每页不允许超过500条', 
									    selectOnFocus: true, 
									    value: this.pageSize, 
									    submitValue: false, 
									    listeners: { //触发事件
									        scope: this, 
									        keydown: this.onHlPagingKeyDown, 
									        blur: this.onHlPagingBlur 
									    } 
                     }),'条','-',{
						            //pressed: true,
						            icon: '/msas/images/grid.png',
						            enableToggle:true,
						            text: '导出本页数据到Excel',
						            cls: 'x-btn-text-icon details',
						            toggleHandler: function(btn, pressed){
						                downloadViewDataActive(xtzygrid);
						            }
						        },'-']; 
         var userItems = this.items || []; 
         this.items = userItems.concat(pageSizeItems); 
         HlPagingToolbar.superclass.initComponent.call(this); 
    }, 
    onHlPagingKeyDown: function(field, e){ //???
        if(field.isValid()){ 
            var k = e.getKey(); 
             if (k == e.RETURN) { 
                    e.stopEvent(); 
                    this.pageSize = field.getValue(); 
                    pagesize=this.pageSize;
                    //alert(this.pageSize);
                    this.doRefresh(); 
             } 
        } 
    }, 
    onHlPagingBlur: function(field){ //??
        if(field.isValid()){ 
            this.pageSize = field.getValue(); 
            //alert(this.pageSize);
            pagesize=this.pageSize;
            this.doRefresh(); 
        } 
    } 
});
    

    var pagingBar= new HlPagingToolbar({//??
        store: xtzystore,
        pageSize: pagesize,
        displayInfo: true});
			    
		
			   
			
			    var xtzygrid = new Ext.grid.GridPanel({//数据显示网格
			        region:'center',
			        store: xtzystore,
			        columns: [
									{header: "报警类型", width: 80, sortable: true, dataIndex: 'Rule_type'},
									{header: "触发规则",  width: 80, sortable: true,  dataIndex: 'Rule_name'},
									{header: "触发时间",  width: 100, sortable: true,  dataIndex: 'Matching_time'},
									{id:"sname",header: "上网场所",  width: 120, sortable: true,  dataIndex: 'sname'},
									{header: "IP地址",    width: 80, sortable: true,  dataIndex: 'Net_ending_ip'},
									{header: "MAC地址",   width: 80, sortable: true,  dataIndex: 'Net_ending_mac'},
									{header: "关键字1",   width: 80, sortable: true,  dataIndex: 'KeyWord1'},
									{header: "关键字2",   width: 80, sortable: true,  dataIndex: 'KeyWord2'},
									{header: "证件类型",  width: 80, sortable: true,  dataIndex: 'Certificate_type'},
									{header: "证件号码",  width: 100, sortable: true,  dataIndex: 'Certificate_code'}
							],
			        tbar: pagingBar,
			        stripeRows: true,
			        autoExpandColumn: 'sname',
			        width:280,
			        height:screen.height-350,
			        frame:true,
			        title:'布控规则列表',
					    collapsible:true,
					    loadMask:{msg:'正在加载数据，请稍侯……'},
					    draggable:true
			    });


				var detailEl;//详细元素内容

			    var rightClick  = new Ext.menu.Menu({

							id:'feeds-ctx',
							items: [{
								id:'realidclientlist',
								iconCls:'load-icon',
								text:'删除用户',
								scope: this,
								handler:function(){//句柄事件
									var record = xtzygrid.getStore().getAt(detailEl);
									var myname=record.get("name"); 
									var mytype=record.get("ctypes");
									var mycode=record.get("Certificate_code");
									Ext.MessageBox.alert('提示','你确定要删除此列吗？');
								}
							},
							{
								id:'realidnetidlist',
								iconCls:'load-icon',
								text:'编辑用户',
								scope: this,
								handler:function(){
									var record = xtzygrid.getStore().getAt(detailEl);
									var myname=record.get("name"); 
									var mytype=record.get("ctypes");
									var mycode=record.get("Certificate_code");
									
									//弹出对话框编辑用户信息
									var ruleInfowin =new  Ext.Window(
											{
                          id: 'realientlistwin',
    											height: 320,
													width: 500,
													closeAction: 'close',
													modal: 'true',
													maximizable:'true',
													margins:'0 5 0 0',
													layout: 'fit',
													html: "<iframe width=100% height='300' SRC = 'msa/msashtml/test1/nasnewbk.htm'  border='0' frameborder='0' scrolling='yes'></iframe>",
													buttons: [{
												            text: '提交',
												            handler: function(){
												                //var strrootgname = Ext.getCmp('bid').getValue();
												                //alert(menufrm.form1.bid.value);
												                Ext.MessageBox.alert('提示','修改用户成功!');
												                windowgroup.close();  
												                var strrootgdesc = Ext.getCmp('clildgdesc').getValue(); 
												                var strrootgcode = Ext.getCmp('clildgcode').getValue(); 
												                //Ext.MessageBox.alert('提示',strrootgname);  
												                Ext.Ajax.request({
													                      method : 'POST', 
													                      url:'/msas/main.xp', 
												                        success: function(response, options) {
							   																	var retxt=response.responseText;
							   																	//Ext.MessageBox.alert('提示',retxt);
							   																	if(retxt.substring(0,1)=='0' ){
																                       Ext.MessageBox.alert('提示','修改用户失败!'); 
																    							}else{
																    								  n.appendChild(new Ext.tree.TreeNode({
																    								  		text: strrootgname,
																    								  		id: retxt,
																    								  		draggable: false
																    								  }));
																    							}
																    							windowgroup.close();		
												                        },
												                        failure : function() {
												                          windowgroup.close();     
												                         	Ext.MessageBox.alert('提示',"修改用户失败!"); 
							                                  },
							 					                        params:{Fun:'msasUpdateAction',Rule_type:myRule_type,Rule_name:myRule_name,Matching_time:myMatching_time,sname:mysname,Net_ending_ip:myNet_ending_ip,Net_ending_mac:myNet_ending_mac,KeyWord1:myKeyWord1,KeyWord2:myKeyWord2,Certificate_type:myCertificate_type,Certificate_code:myCertificate_code,Matching_id:myMatching_id} 
												               });
												               //http://192.168.0.177/msas/main.xp?Fun=msasGroupAction+actiontype=1+pid=0+level=0+name=33333+mydesc=3333333+areacode=343434
												            }
												        },{
												            text: '取消',
												            handler: function(){
												              windowgroup.close(); 
												            }
												        }] 
											 }); 
                                              ruleInfowin.show(); 
								//alert(myname + ' ' + mytype + ' ' + mycode);
								}
							}
						]});
						
                     xtzygrid.addListener('rowclick', rightClickFn);
                     function rightClickFn(client, rowIndex, e) {
                                      rightClick.showAt(e.getXY()); 
                                      detailEl=  rowIndex;

                     }     
						
						var westPanel= {
					          id: 'east-panel',
                    region:'west',
                    collapsible: true,
                    split:true,
                    width: 280,
                    minSize: 155,
                    maxSize: 400,
                    layout:'fit',
                    margins:'0 0 0 0',
                    title:'警报与内容',
                    tbar: [{
						            icon:'/msas/extjs/resources/images/default/tree/drop-add.gif',
						            iconCls:'drop-add',						            
						            text:'添加新报警策略',
						            handler: function(){
														var hgt=(screen.height)-250;
														var windowgroup = new Ext.Window({
												        title: '添加新报警规则',
												        closeAction: 'close',
												        width: 650,
												        height:500,
												        minWidth: 200,
												        minHeight: 200,
												        plain:true,
												        bodyStyle:'padding:5px;',
												        buttonAlign:'center',
												        html: "<IFRAME id='Addfrm' name='Addfrm' target='main' width=100% height='"+ hgt + "' SRC = '/msa/masahtml/main1/main.xp?Fun=msasShowRulePage'  border='0' frameborder='0' scrolling='yes'></iframe>",
												        buttons: [{
												            text: '添加',
												            handler: function(){
															    Ext.MessageBox.alert('提示',"1111");
												                var myRule_type = Ext.getCmp('menufrm.Rule_type').getValue();
																Ext.MessageBox.alert('提示',"2222");
																var frm=document.all('Addfrm').contentWindow.document;
																var myRule_name = Ext.getCmp('Rule_name').getValue();
																var myRule_type =Ext.getCmp('Rule_type').getValue();
																var myMatching_time = Ext.getCmp('Matching_time').getValue();
																var mysname = Ext.getCmp('sname').getValue();
																var myNet_ending_ip = Ext.getCmp('Net_ending_ip').getValue();
																var myNet_ending_mac = Ext.getCmp('Net_ending_mac').getValue();
																var myKeyWord1 = Ext.getCmp('KeyWord1').getValue();
																var myKeyWord2 = Ext.getCmp('KeyWord2').getValue();
																var myCertificate_type = Ext.getCmp('Certificate_type').getValue();
																var myCertificate_code = Ext.getCmp('Certificate_code').getValue();

												                Ext.MessageBox.alert('提示',"弹出我来");
												                Ext.MessageBox.alert('报警类型',myRule_type);
												                
												                //var strrootgdesc = Ext.getCmp('clildgdesc').getValue(); 
												                //var strrootgcode = Ext.getCmp('clildgcode').getValue(); 
												                //Ext.MessageBox.alert('提示',strrootgname);  
												                Ext.Ajax.request({
													                      method : 'POST', 
													                      url:'/msas/main.xp', 
												                        success: function(response, options) {
							   																	var retxt=response.responseText;
							   																	//Ext.MessageBox.alert('提示',retxt);
							   																	if(retxt.substring(0,1)=='0' ){
																                                   Ext.MessageBox.alert('提示','添加用户失败!'); 
																    							}else{
																    							    Ext.MessageBox.alert('提示',"添加成功!");	  
																    							}
																    							windowgroup.close();		
												                        },
												                        failure : function() {
												                          windowgroup.close();     
												                         	Ext.MessageBox.alert('提示',"添加用户失败!"); 
							                                  },
							 					                         //params:{Fun:'msasGroupAction',actiontype:'1',pid:n.id,level:n.getDepth(),name:strrootgname,mydesc://strrootgdesc,areacode:strrootgcode}
																		 params:{Fun:'msasShowRulePage',Rule_type:'Rule_type',Rule_name:'Rule_name',Matching_time:'Matching_time',sname:'sname',Net_ending_ip:'Net_ending_ip',Net_ending_mac:'Net_ending_mac',KeyWord1:'KeyWord1',KeyWord2:'KeyWord2',Certificate_type:'Certificate_type',Certificate_type:'Certificate_type'}
												               });
												                //http://192.168.0.177/msas/main.xp?Fun=msasGroupAction+actiontype=1+pid=0+level=0+name=33333+mydesc=3333333+areacode=343434
												            }
												        },{
												            text: '关闭',
												            handler: function(){
												              windowgroup.close(); 
												            }
												        }] 
												    });
												
												    windowgroup.show();
						            },
						            scope: this
						        },'-'],
                    items:alertPanelTree
              }
              
              
						
						// Finally, build the main layout once all the pieces are ready.  This is also a good
						// example of putting together a full-screen BorderLayout within a Viewport.
					    new Ext.Viewport({
									layout: 'border',
									bbar: new Ext.StatusBar({
								      id: 'centerstatus',
                      defaultText: 'Ready',
                      defaultIconCls: 'default-icon',
                      iconCls: 'ready-icon'
                  }),
									items: [
									  northPanel,
									  westPanel,
										xtzygrid
									],
					        renderTo: Ext.getBody()
					    });
             
            myMask.hide();
  });
	</SCRIPT>

<META name=GENERATOR content="MSHTML 8.00.6001.18702"></HEAD>
<!-- <BODY  oncontextmenu="return false" > 禁用鼠标右键-->
<BODY>
<LINK rel=stylesheet type=text/css href="publiccss/pubcss.css">
<DIV id=north>
<P>设置各类布控规则以及发布布控规则等。</P>
</DIV>


</BODY></HTML>
