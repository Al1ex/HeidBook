<HTML><HEAD><TITLE>网络7层管理和过滤的领导者</TITLE>
<META content="text/html; charset=utf-8" http-equiv=Content-Type>
<LINK rel=stylesheet type=text/css href="/msas/extjs/resources/css/ext-all.css">
<link rel="stylesheet" type="text/css" href="/msas/extjs/resources/css/feed-viewer.css" />
<LINK rel=stylesheet type=text/css href="/msas/extjs/resources/css/xtheme-default.css" id="xthemecss" >
<script type="text/javascript" src="/msas/extjs/adapter/ext/ext-base.js"></script>
<SCRIPT type=text/javascript  src="/msas/extjs/ext-all.js"></SCRIPT>


<SCRIPT type=text/javascript>
    
    Ext.BLANK_IMAGE_URL = '/msas/extjs/resources/images/default/s.gif';
    var searchTreePanel;

    Ext.onReady(function(){
	
						Ext.QuickTips.init();

						var detailEl;
						var mainViewEl;
						
						var myMask = new Ext.LoadMask(Ext.getBody(), 
						{
								        	msg:"Please wait..."
						});
									
						myMask.show();
            

						
						var contentPanel = {
							id: 'content-panel',
							region: 'center', // this is what makes this panel into a region within the containing layout
							margins: '2 5 5 0',
							activeItem: 0,
							border: false,
							el:'mainviewdiv'
						};
					    

              
						  // Go ahead and create the TreePanel now so that we can use it below
					    var treePanel = new Ext.tree.TreePanel({
					    	  id: 'tree-panel',
					        region:'north',
					        split: true,
					        height: 350,
					        minSize: 150,
					        autoScroll: true,
					        rootVisible: false,
					        lines: false,
					        useArrows: true,
					        loader: new Ext.tree.TreeLoader({
					            dataUrl:'/msas/data/data-tree-data.json'
					        }),
					        
					        root: new Ext.tree.AsyncTreeNode()
					   });
					   

				
					  
						// Assign the changeLayout function to be called on tree node click.
					  treePanel.on('click', function(n){
					    	var sn = this.selModel.selNode || {}; // selNode is null on initial selection
					    	//if(n.leaf && n.id != sn.id){  // ignore clicks on folders and currently selected node 
								if(n.leaf){  // ignore clicks on folders and currently selected node 
								 if(n.id=='0' || n.id=='1' || n.id=='2' || n.id=='3' || n.id=='4' || n.id=='5' || n.id=='6' || n.id=='7' || n.id=='8' || n.id=='9'){
								    mainviewfrm.location.href='/msas/main.xp?Fun=msasShKeyList+type='+n.id;
								 }else{
									 mainviewfrm.location.href=n.id+'.htm';
                 }
					    	}
					  });
					  
				
						var detailsPanel = {
							    id: 'details-panel',
					        title: '消息',
					        region: 'center',
					        bodyStyle: 'padding-bottom:15px;background:#eee;',
							    autoScroll: true,
							    html: '<p class="details-info">经常及时关注系统消息和通知.</p>'
					  };
						
						var westPanel ={
                    title:'身份|轨迹|警报',
                    width: 250,
                    minSize: 125,
                    maxSize: 400,
        						collapsible: true,
        						cmargins:'0 5 5 5',
						        lines:false,
						        autoScroll:true,
						        collapseFirst:false,
								    layout: 'fit',
						    	  id: 'layout-browserPanel',
						        border: false,
						        split:true,
								    margins: '2 0 5 5',
								    items: [treePanel]
						};
						
					searchTreePanel = new Ext.tree.TreePanel({
					    	  id: 'search-tree-panel',
					        split: true,
					        height: 350,
					        minSize: 150,
					        autoScroll: true,
					        rootVisible: false,
					        lines: false,
					        useArrows: true,
					        loader: new Ext.tree.TreeLoader({
					            dataUrl:'/msas/main.xp?Fun=msasSearchTree',
											baseParams:{Fun:'msasSearchTree'} 
					        }),
					        contextMenu: new Ext.menu.Menu({
				                id:'feeds-ctxs',
				                items: [{
				                    id:'shanchusts',
				                    iconCls:'load-icon',
				                    text:'删除该搜索',
				                    scope: this
				                }],
				                listeners: {
								            itemclick: function(item) {
								               var n = item.parentMenu.contextNode;
								               function confirmdelgroup(btn){
																	 if(btn=='yes'){
								     														Ext.Ajax.request({
																	                      method : 'POST', 
																	                      url:'/msas/main.xp', 
																                        success: function(response, options) {
															 													var retxt=response.responseText;
															 													if(retxt.substring(0,1)=='1' ){
																				                       n.remove();
																				    							}else{
																				    								  Ext.MessageBox.alert('提示','删除失败!'); 
																				    							}
																                        },
																                        failure : function() {    
																                         	Ext.MessageBox.alert('提示','删除失败!'); 
															                         },
															                         params:{Fun:'msasYunSearchDel',id:n.id} 
																  						 });
																	        }
														  };
								              Ext.MessageBox.confirm('Confirm', '您确认要删除吗?', confirmdelgroup); 
								          }
						          }
								  }),
					        root: new Ext.tree.AsyncTreeNode()
					   });
					   

				
					  
						// Assign the changeLayout function to be called on tree node click.
					  searchTreePanel.on('click', function(n){
					    	var sn = this.selModel.selNode || {}; // selNode is null on initial selection
					    	//if(n.leaf && n.id != sn.id){  // ignore clicks on folders and currently selected node 
								if(n.leaf){  // ignore clicks on folders and currently selected node 
								    mainviewfrm.location.href='/msas/main.xp?Fun=msasShowYunSearch+YunPath=' + n.id ;
					    	}
					  });
					  
					  searchTreePanel.on('contextmenu', function(node,e){
					    	node.select();
		            var c = node.getOwnerTree().contextMenu;
		            c.contextNode = node;
		            c.showAt(e.getXY());
		            
					  });
					  
			
						var searchPanel ={
                    title:'云搜索',
                    width: 250,
                    minSize: 125,
                    maxSize: 400,
        						collapsible: true,
        						cmargins:'0 5 5 5',
						        lines:false,
						        autoScroll:true,
						        collapseFirst:false,
								    layout: 'fit',
						    	  id: 'seachPanelid',
						        border: false,
						        split:true,
								    margins: '2 0 5 5',
								    tbar: [{
						            icon:'/msas/extjs/resources/images/default/tree/drop-add.gif',
						            iconCls:'drop-add',						            
						            text:'新建云分布搜索',
						            handler: function(){
						               //选择分组
						               var node=tree.getSelectionModel().getSelectedNode();    
						               mainviewfrm.location.href="/msas/main.xp?Fun=msasShowYunSearchPage+codetype=0+yun=";
						            },
						            scope: this
						           }],
								    items: [searchTreePanel]
						};
						
						var tree = new Ext.tree.TreePanel({
				        region:'north',
				        height: 200,
				        width: 250,
				        useArrows:true,
				        autoScroll:true,
				        animate:true,
				        rootVisible: false,
				        root: {
				            nodeType: 'async'
				        },  
				        loader: new Ext.tree.TreeLoader({
										dataUrl:'/msas/main.xp?Fun=msasGroupTree',
										baseParams:{Fun:'msasGroupTree'} 
								}),
				    	 listeners: {
						    click: function(node, e) {
						            //var myurl="/msas/main.xp?Fun=msasShowHostList+groupid=" + node.id + "&grouplevel=" + (node.getDepth()-1) ;
						            //Ext.MessageBox.alert('提示',myurl);
						            //parent.mainviewfrm.location.href="/msas/datacenter/AccessList.htm" ;
						            xtzystore.load({params:{Fun:'msasClientList',gid:node.id,level:(node.getDepth()-1)}});
						     }        
						   }
				    });
				    
				    
				     var xtzystore = new Ext.data.JsonStore({
				        root: 'Results',
				        totalProperty: 'totalCount',
				        url:'/msas/main.xp?Fun=msasClientList',
				        fields: [
				           {name: 'gnmkey'},
				           {name: 'Service_code'},
				           {name: 'Service_name'},
				           {name: 'Address'},
				           {name: 'Principal'},
				           {name: 'Principal_tel'},
				           {name: 'usernum'},
				           {name: 'startday'},
				           {name: 'endday'}
				        ]
				    });
								
				    var xtzygrid = new Ext.grid.GridPanel({
				        store: xtzystore,
				        region:'center',
				        columns: [
				            {id:'Service_name',header: "客户名称", width: 100, sortable: true, dataIndex: 'Service_name'},
				            {header: "序列号",   width: 100, sortable: true,  dataIndex: 'gnmkey'}
				        ],
				        stripeRows: true,
				        autoExpandColumn: 'Service_name',
				        width:250,
				        height:screen.height-350,
				        title:'探针终端列表',
				        frame:true,
						    collapsible:true,
						    loadMask:{msg:'正在加载数据，请稍侯……'},
						    draggable:true
				    });
				    
				    xtzygrid.addListener('rowclick', rightClickFn);
						function rightClickFn(client, rowIndex, e) {
								     var record = xtzygrid.getStore().getAt(rowIndex);
				             var mygnmkey=record.get("gnmkey"); 
						         mainviewfrm.location.href="/msas/main.xp?Fun=msasShowAccessList+gnmkey=" + mygnmkey ;
						        
						         
						}    
						
						var groupPanel ={
                    title:'上网日志',
                    width: 250,
                    minSize: 125,
                    maxSize: 400,
        						collapsible: true,
        						cmargins:'0 5 5 5',
						        lines:false,
						        autoScroll:true,
						        collapseFirst:false,
						        border: false,
						        split:true,
								    margins: '2 0 5 5',
                    layout: 'border',
	                  tbar: [{
							            text:'日志搜索',
							            icon:'/msas/extjs/resources/images/default/find.png',
						              iconCls:'find',						            
							            id: 'tblogfind',
							            handler: function(){
							              var node=tree.getSelectionModel().getSelectedNode();    
									          if(!node){
									            Ext.MessageBox.alert('提示','请先选择分组！');
									            return; 
									          }
						                mainviewfrm.location.href='/msas/main.xp?Fun=msasShowAccessSearch&id=' + node.id ;
							            },
							            scope: this
										}],
										items: [
										  tree,
											xtzygrid
										]
						};
						
						
						
						
						var eastPanel= {
					          id: 'east-panel',
                    region:'west',
                    collapsible: true,
                    split:true,
                    width: 250,
                    minSize: 200,
                    maxSize: 400,
                    layout:'fit',
                    margins:'0 5 0 0',
                    title:'选择主线',
                    items:
                        new Ext.TabPanel({
                            border:false,
                            activeTab:0,
                            items:[westPanel,
//                            groupPanel,
                            searchPanel]
                        })
              }
						
						// Finally, build the main layout once all the pieces are ready.  This is also a good
						// example of putting together a full-screen BorderLayout within a Viewport.
					    new Ext.Viewport({
									layout: 'border',
									bbar: new Ext.StatusBar({
								      id: 'centerstatus',
                      defaultText: 'Ready',
                      defaultIconCls: 'default-icon',
                      iconCls: 'ready-icon'
                  }),
									items: [
									  eastPanel,
										contentPanel
									],
					        renderTo: Ext.getBody()
					    });
             
            myMask.hide();
  });
	</SCRIPT>

</HEAD>
<BODY>

<div style="display:none;">
    
        <!-- Start page content -->

        <div id="proxy"></div>
        <div id="mainviewdiv">
            <iframe id="mainviewfrm" name="mainviewfrm" src="/msas/datacenter/manpage.htm" valign=top width="100%" height="50" border="0" frameborder="0" scrolling="yes"></iframe>
        </div>
        
        <!-- Basic layouts -->
        
       
    </div>
<script>
document.all("mainviewfrm").style.height=screen.height-230;
</script>
</BODY></HTML>
